{"version":3,"sources":["firebase/config.js","assets/sara.jpg","assets/john.jpg","assets/tyler.jpg","_DATA.js","firebase/firestore.js","actions/signin.js","components/Signin.js","components/Nav.js","actions/questions.js","components/Poll.js","components/Home.js","components/New.js","components/User.js","components/Leaderboard.js","actions/users.js","components/PollView.js","assets/profile.png","firebase/upload.js","components/SignUp.js","components/App.js","reducers/index.js","reducers/signin.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","arraying","object","Keys","Object","keys","array","forEach","key","push","useNavigateToHome","authedUser","navigate","useEffect","setTimeout","alert","database","getFirestore","saveQuestionAnswer","question","a","obj","uid","qid","answer","setDoc","doc","votes","merge","answers","console","log","saveUser","user","text","username","value","image","avatar","src","url","questions","password","currentUser","id","saveQuestion","timestamp","Date","now","author","optionOne","optionOneText","optionTwo","optionTwoText","addDoc","collection","docRef","getQuestions","getDocs","data","getUsers","users","SIGN_IN","SIGN_OUT","signIn","type","logged","Signin","useState","selectedUser","setselectedUser","setpassword","isHidden","setisHidden","dispatch","useDispatch","useNavigate","useAuth","login","handleSignin","e","preventDefault","then","catch","handleSignIn","message","className","name","onChange","target","test","placeholder","Label","basic","color","pointing","onClick","to","Nav","useSelector","store","logout","isExpanded","setisExpanded","isVisible","setisVisible","handleSignout","toggleNav","exact","GET_QUESTIONS","ADD_QUESTION","ANSWER_QUESTION","handleGetQuestions","addQsToState","handleAddQuestion","addQuestion","handleAnswerQuestion","answerQuestion","Poll","viewed","poll","answered","setanswered","setanswer","processing","setprocessing","includes","optionOneVotes","length","optionTwoVotes","total","Button","icon","floated","size","compact","circular","handleBack","Icon","Image","alt","wrapped","Progress","inverted","percent","Math","round","progress","indicating","onSubmit","handleSubmit","Loader","active","htmlFor","Home","allAnswered","allNotAnswered","q","sort","b","map","New","setoptionOne","setoptionTwo","User","Leaderboard","usersArray","scoresArray","score","GET_USERS","ADD_USER","handleGetUsers","allUsers","handleAddUser","signup","u","addUser","PollView","useParams","Message","negative","Header","labelPosition","label","storage","getStorage","upload","file","storageRef","ref","uploadBytes","snapshot","getDownloadURL","link","SignUp","seturl","setusername","style","backgroundImage","profile","width","aspectRatio","backgroundSize","borderRadius","opacity","position","files","rules","minLength","iconSize","messages","disabled","App","loading","setloading","path","element","combineReducers","state","action","concat","logger","next","group","returnValue","getState","groupEnd","applyMiddleware","thunk","setCurrentUser","setLoading","onAuthStateChanged","email","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","createStore","reducers","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90e81e20.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getStorage, ref } from \"firebase/storage\"\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\n// Web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDxwrTCZY2zDTKoUUdVAA5dn_ayUW1qSTw\",\r\n    authDomain: \"would-you-rather-3302c.firebaseapp.com\",\r\n    projectId: \"would-you-rather-3302c\",\r\n    storageBucket: \"would-you-rather-3302c.appspot.com\",\r\n    messagingSenderId: \"427909105110\",\r\n    appId: \"1:427909105110:web:07aa4def09e4828598d077\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth()\r\n\r\n// const firestore = app.firestore()\r\n// export const database = {\r\n//   folders: firestore.collection(\"folders\"),\r\n//   files: firestore.collection(\"files\"),\r\n//   formatDoc: doc => {\r\n//     return { id: doc.id, ...doc.data() }\r\n//   },\r\n//   getCurrentTimestamp: firebase.firestore.FieldValue.serverTimestamp,\r\n// }","export default __webpack_public_path__ + \"static/media/sara.a8a1e723.jpg\";","export default __webpack_public_path__ + \"static/media/john.103fc5ba.jpg\";","export default __webpack_public_path__ + \"static/media/tyler.e6a9ee54.jpg\";","import { useEffect } from \"react\"\nimport sara from './assets/sara.jpg'\nimport john from './assets/john.jpg'\nimport tyler from './assets/tyler.jpg'\n\nlet authedUser\n\nlet users = {\n  sarahedo: {\n    key: 'sarahedo',\n    text: 'Sarah Edo',\n    value: 'Sarah Edo',\n    image: { avatar: true, src: sara },\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\n    password: '1234',\n  },\n  tylermcginnis: {\n    key: 'tylermcginnis',\n    text: 'Tyler McGinnis',\n    value: 'Tyler McGinnis',\n    image: { avatar: true, src: tyler },\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    password: '1234',\n  },\n  johndoe: {\n    key: 'johndoe',\n    text: 'John Doe',\n    value: 'John Doe',\n    image: { avatar: true, src: john },\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    password: '1234',\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID() {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000)\n    \n  })\n}\n\nconst formatUser = ({ url, username, password }) => {\n  return {\n    key: username.toLowerCase().replace(/\\s/g, ''),\n    text: username,\n    value: username,\n    image: { avatar: true, src: url },\n    answers: {},\n    questions: [],\n    password,\n  }\n}\n\nexport function _addUser(user) {\n  return new Promise((res, rej) => {\n    const formattedUser = formatUser(user)\n    setTimeout(() => {\n      users = {\n        ...users,\n        [formattedUser.key]: formattedUser,\n      }\n      res(formattedUser)\n    }, 1000)\n  })\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000)\n  })\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n\nexport const arraying = (object) => {\n  const Keys = Object.keys(object)\n  let array = []\n  Keys.forEach((key) => {\n    array.push(object[key])\n  })\n  return array\n}\n\nexport const useNavigateToHome = (authedUser ,navigate) => {\n  useEffect(() => {\n    if (authedUser === null) {\n      navigate('/signin')\n      setTimeout(() => alert('Please login to view the app'), 100)\n    }\n  }, [authedUser, navigate])\n}\n\nexport function _login (user) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      authedUser = user\n      res()\n    }, 0)\n  })\n}","import app from \"./config\"\r\nimport { setDoc, getFirestore, addDoc, getDocs, collection, runTransaction, doc } from \"firebase/firestore\"\r\nimport { arraying } from \"../_DATA\"\r\nimport { getAuth } from 'firebase/auth'\r\n\r\n// Initialize the FirebaseUI Widget using Firebase.\r\nconst database = getFirestore()\r\nconst auth = getAuth()\r\n\r\nexport const saveQuestionAnswer = async (question) => {\r\n    const obj = {\r\n        uid: question.uid,\r\n        qid: question.qid,\r\n        answer: question.answer\r\n    }\r\n    try {\r\n        await setDoc(doc(database, 'questions', `${obj.qid}`),\r\n            {\r\n                [obj.answer]: {\r\n                    votes: [obj.uid]\r\n                }\r\n            },\r\n            { merge: true })\r\n        await setDoc(doc(database, 'users', `${obj.uid}`),\r\n            {\r\n                answers: {\r\n                    [obj.qid]: obj.answer\r\n                }\r\n            },\r\n            { merge: true })\r\n        return obj\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const saveUser = async (user) => {\r\n    const obj = {\r\n        text: user.username,\r\n        value: user.username,\r\n        image: { avatar: true, src: user.url },\r\n        answers: {},\r\n        questions: [],\r\n        password: user.password\r\n    }\r\n    try {\r\n        await setDoc(doc(database, 'users', `${auth.currentUser.uid}`), obj)\r\n        return { id: auth.currentUser.uid, ...obj }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const saveQuestion = async (question) => {\r\n    const obj = {\r\n        timestamp: Date.now(),\r\n        author: question.author,\r\n        optionOne: {\r\n            votes: [],\r\n            text: question.optionOneText,\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: question.optionTwoText,\r\n        }\r\n    }\r\n    try {\r\n        const docRef = await addDoc(collection(database, 'questions'), obj)\r\n        await setDoc(doc(database, 'users', `${obj.author}`), {\r\n            questions: [docRef.id]\r\n        },\r\n        { merge: true })\r\n        return { id: docRef.id, ...obj }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getQuestions = async () => {\r\n    let questions = {}\r\n    const querySnapshot = await getDocs(collection(database, \"questions\"));\r\n    querySnapshot.forEach((doc) => {\r\n        questions = {\r\n            ...questions,\r\n            [doc.id]: {\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }\r\n        }\r\n    })\r\n    return questions\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    let users = {}\r\n    const querySnapshot = await getDocs(collection(database, \"users\"));\r\n    querySnapshot.forEach((doc) => {\r\n        users = {\r\n            ...users,\r\n            [doc.id]: {\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }\r\n        }\r\n    })\r\n    return users\r\n}\r\n","import { saveUser } from \"../firebase/firestore\"\nimport { _login } from \"../_DATA\"\n\nexport const SIGN_IN = 'SIGN_IN'\nexport const SIGN_OUT = 'SIGN_OUT'\n\nexport const signIn = (user) => {\n    return {\n        type: SIGN_IN,\n        user,\n        logged: true,\n    }\n}\n\nexport const handleSignIn = (user, login) => {\n    return (dispatch) => {\n        return login(user.username, user.password)\n        .then(() => {\n            dispatch(signIn(user))\n        }).catch(e => console.log(e))\n    }\n}\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT,\n        user: {},\n        logged: false,\n    }\n}","import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Dropdown, Image, Label } from \"semantic-ui-react\"\nimport 'semantic-ui-css/semantic.min.css'\nimport { handleSignIn } from \"../actions/signin\"\nimport { arraying } from \"../_DATA\"\nimport { useNavigate } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { useAuth } from \"..\"\n\nconst Signin = () => {\n\n    const [selectedUser, setselectedUser] = useState('')\n    const [password, setpassword] = useState('')\n    const [isHidden, setisHidden] = useState(false)\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const { currentUser, login } = useAuth()\n\n    useEffect(() => {\n        if (currentUser && currentUser !== null) {\n            navigate('/')\n        } else return\n    }, [currentUser])\n\n    const handleSignin = (e, username) => {\n        e.preventDefault()\n        // if (password !== user.password) {\n        //     alert('Incorrect Password!')\n\n        //     return\n        // }\n        const user = {\n            username,\n            password,\n        }\n        dispatch(handleSignIn(user, login))\n            .then(() => navigate('/'))\n            .catch((e) => {\n                alert(e.message)\n                return\n            })\n    }\n\n    return (\n        <div className='signin container bg-dark text-white'>\n            {/* <Image src={img} centered circular size='small' /> */}\n            <div className='dropdown flex container'>\n                <span className='fs-400 ff-sans-cond text-white'>Select Your User Name:\n                    {/* <Dropdown\n                        className='fs-400 ff-sans-normal text-white'\n                        inline\n                        options={users}\n                        defaultValue={users[0].value}\n                        onChange={(e) => {\n                            setselectedUser(e.currentTarget.textContent)\n                            setimg(e.currentTarget.firstChild.getAttribute('src'))\n                        }}\n                    /> */}\n                    <input\n                        className='form-input bg-dark text-white fs-400 ff-sans-cond'\n                        type='text'\n                        name='username'\n                        value={selectedUser}\n                        onChange={(e) => {\n                            setselectedUser(e.target.value)\n                        }}\n                    />\n                </span>\n                <input\n                    className='form-input bg-dark text-white fs-400 ff-sans-cond'\n                    type='password'\n                    name=\"password\"\n                    value={password}\n                    onChange={(e) => {\n                        const test = /^[0-9\\b]+$/\n                        if (test.test(e.target.value) || e.target.value === '') {\n                            setpassword(e.target.value)\n                        } else {\n                            setisHidden(true)\n                        }\n                        setTimeout(() => setisHidden(false), 5000)\n                    }}\n                    placeholder=\"Password\" />\n                <div className={!isHidden ? 'hide' : ''}>\n                    <Label\n                        basic\n                        color='red'\n                        pointing\n                    >\n                        Please enter numbers only!\n                    </Label>\n                </div>\n            </div>\n            <div className=\"underline-indicators container\">\n                <button\n                    className='d-block fs-500 ff-serif bg-dark text-accent'\n                    onClick={(e) => {\n                        if (!selectedUser) {\n                            alert('Please Select Your User Name')\n                            return\n                        }\n                        handleSignin(e, selectedUser)\n                        // for (let i = 0; i < users.length; i++) {\n                        //     const target = users[i]\n                        //     if (target.text === selectedUser) {\n                        //         handleSignin(e, target)\n                        //     }\n                        // }\n                    }}>\n                    Sign In\n                </button>\n            </div>\n            <Link\n                to={'/signup'}\n                className='d-block fs-400 ff-serif bg-dark text-accent'\n            >\n                New User? Sign Up here.\n            </Link>\n        </div>\n    )\n}\n\nexport default Signin\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { Button } from 'semantic-ui-react'\nimport { useAuth } from '..'\nimport { signOut } from '../actions/signin'\n\nconst Nav = () => {\n\n    const user = useSelector((store) => store.signIn.user)\n    const { logout } = useAuth()\n\n    const [isExpanded, setisExpanded] = useState(false)\n    const [isVisible, setisVisible] = useState(false)\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    \n\n    const handleSignout = () => {\n        logout()\n        dispatch(signOut())\n        navigate('/signin')\n    }\n\n    const toggleNav = (e) => {\n        e.preventDefault()\n        if (!isVisible) {\n            setisVisible(true)\n            setisExpanded(true)\n        } else {\n            setisVisible(false)\n            setisExpanded(false)\n        }\n    }\n\n    return (\n        <div className='primary-header flex bg-dark'>\n            <p\n                className='fs-300 ff-serif text-white user-name'\n            >Welcome <span\n                className='ff-serif fs-400 text-accent'\n            >{user && user.text}\n                </span>\n                !</p>\n            <button\n                onClick={(e) => toggleNav(e)}\n                aria-expanded={isExpanded}\n                className='mobile-nav-toggle'\n            ><span\n                className='sr-only'\n            >Menu</span></button>\n            <div\n                data-visible={isVisible}\n                className='nav primary-navigation underline-indicators flex'\n            >\n                <Link\n                    to='/'\n                    exact='true'\n                    className='fs-400 ff-sans-cond text-white'\n                >\n                    Home\n                </Link>\n                <Link\n                    to='/new'\n                    className='fs-400 ff-sans-cond text-white'\n                >\n                    New Poll\n                </Link>\n                <Link\n                    to='/leaderboard'\n                    className='fs-400 ff-sans-cond text-white'\n                >\n                    Leaderboard\n                </Link>\n                <Link\n                    to='/signin'\n                    onClick={() => handleSignout()}\n                    className='fs-400 ff-sans-cond text-white'\n                >\n                    Sign Out\n                </Link>\n            </div>\n        </div>\n    )\n}\nexport default Nav\n","import { getQuestions, saveQuestion, saveQuestionAnswer } from \"../firebase/firestore\"\nimport { _getQuestions, _saveQuestion, _saveQuestionAnswer } from \"../_DATA\"\n\nexport const GET_QUESTIONS = 'GET_QUESTIONS'\nexport const ADD_QUESTION = 'ADD_QUESTION'\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\n\nconst addQsToState = (questions) => {\n    return {\n        type: GET_QUESTIONS,\n        questions,\n    }\n}\n\nexport const handleGetQuestions = () => {\n    return (dispatch) => {\n        return getQuestions()\n            .then((questions) => dispatch(addQsToState(questions)))\n    }\n}\n\nconst addQuestion = (question) => {\n    return {\n        type: ADD_QUESTION,\n        question,\n    }\n}\n\nexport const handleAddQuestion = (data) => {\n    return (dispatch) => {\n        return saveQuestion(data)\n        .then(question => dispatch(addQuestion(question)))\n    }\n}\n\nconst answerQuestion = (question) => {\n    return {\n        type: ANSWER_QUESTION,\n        uid: question.uid,\n        qid: question.qid,\n        answer: question.answer,\n    }\n}\n\nexport const handleAnswerQuestion = (question) => {\n    return (dispatch) => {\n        return saveQuestionAnswer(question)\n        .then(() => dispatch(answerQuestion(question)))\n    }\n}","import React, { Component, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { Button, Form, Icon, Image, Loader, Message, Progress } from 'semantic-ui-react'\nimport { useAuth } from '..'\nimport { handleAnswerQuestion } from '../actions/questions'\n\nconst Poll = ({ viewed, poll }) => {\n\n    const { id, author, optionOne, optionTwo } = poll\n\n    const users = useSelector(store => store.users)\n    const authedUser = useSelector(store => store.signIn.user)\n\n    const [answered, setanswered] = useState(false)\n    const [answer, setanswer] = useState('')\n    const [processing, setprocessing] = useState(false)\n\n    \n    \n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const { currentUser } = useAuth()\n    const user = users[author]\n\n    useEffect(() => {\n        if (optionOne.votes.includes(currentUser && currentUser.uid)\n            || optionTwo.votes.includes(currentUser && currentUser.uid)) {\n            setanswered(true)\n        } else {\n            setanswered(false)\n        }\n    }, [currentUser])\n\n    const optionOneVotes = optionOne.votes.length\n    const optionTwoVotes = optionTwo.votes.length\n    const total = optionOneVotes + optionTwoVotes\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (answer === '') {\n            alert('Please choose an answer!')\n            return\n        }\n        setprocessing(true)\n        const question = {\n            uid: currentUser.uid,\n            qid: id,\n            answer,\n        }\n        dispatch(handleAnswerQuestion(question))\n            .then(() => {\n                setanswered(true)\n                setprocessing(false)\n            })\n    }\n\n    const handleBack = (e) => {\n        e.preventDefault()\n        navigate(-1)\n    }\n\n    return (\n        <div className='flex text-white card ff-serif'>\n            <div className='card-header flex'>\n                <p className='fs-400'>{user && user.text} asked:</p>\n                {viewed && (\n                    <Button\n                        icon floated='right'\n                        size='mini'\n                        compact\n                        circular\n                        onClick={(e) => handleBack(e)}\n                    >\n                        <Icon name='left arrow' />\n                    </Button>\n                )}\n            </div>\n            <div className='card-content flex'>\n                <div className='card-img'><Image src={user && user.image.src} alt='user avatar' size='massive' avatar wrapped /></div>\n                <div className=\"card-info\">\n                    {!viewed && (\n                        <div>\n                            <p className='uppercase text-accent'>Would You Rather?</p>\n                            <p className='fs-400 ff-sans-cond'>{poll.optionOne.text} or ...</p>\n                            <Link\n                                className='button d-block fs-500 ff-serif bg-trans text-accent'\n                                to={`/poll/${poll.id}`}>View</Link>\n                        </div>\n                    )}\n                    {viewed && answered && (\n                        <div className='flex col'>\n                            <p>Would You Rather?</p>\n                            <div className={poll.optionOne.votes.includes(authedUser && authedUser.id)\n                                ? 'selected-answer flex col card-answer'\n                                : 'not-selected-answer flex col card-answer'\n                            }>\n                                <p>{poll.optionOne.text}</p>\n                                <div className='prog'>\n                                    <Progress\n                                        inverted\n                                        percent={Math.round(optionOneVotes / total * 100)}\n                                        progress\n                                        indicating\n                                    />\n                                </div>\n                                <p>{optionOneVotes} out of {total} votes</p>\n                            </div>\n                            <div className={poll.optionTwo.votes.includes(authedUser && authedUser.key)\n                                ? 'selected-answer flex col card-answer'\n                                : 'not-selected-answer flex col card-answer'\n                            }>\n                                <p>{poll.optionTwo.text}</p>\n                                <div className='prog'>\n                                    <Progress\n                                        inverted\n                                        percent={Math.round(optionTwoVotes / total * 100)}\n                                        progress\n                                        indicating\n                                    />\n                                </div>\n                                <p>{optionTwoVotes} out of {total} votes</p>\n                            </div>\n                        </div>\n                    )}\n                    {viewed && answered === false && (\n                        <form\n                            onSubmit={(e) => handleSubmit(e)}\n                            className='flow form'\n                        >\n                            {processing ? (\n                                <div className='grid relative'>\n                                    <div>\n                                        <Loader active size='massive' />\n                                    </div>\n                                    <span className='fs-500 ff-serif text-accent loading'>Loading Data...</span>\n                                </div>\n                            ) : (\n                                <>\n                                    <p>Would You Rather?</p>\n                                    <div className='flex'>\n                                        <input\n                                            type='radio'\n                                            id='optionOne'\n                                            name='options'\n                                            value={poll.optionOne.text}\n                                            onChange={(e) => setanswer(e.target.id)} />\n                                        <label\n                                            className='ff-sans-cond fs-400'\n                                            htmlFor='optionOne'>{poll.optionOne.text}</label>\n                                    </div>\n                                    <div className='flex'>\n                                        <input\n                                            type='radio'\n                                            id='optionTwo'\n                                            name='options'\n                                            value={poll.optionTwo.text}\n                                            onChange={(e) => setanswer(e.target.id)} />\n                                        <label\n                                            className='ff-sans-cond fs-400'\n                                            htmlFor='optionTwo'>{poll.optionTwo.text}</label>\n                                    </div>\n                                    <button\n                                        type='submit'\n                                        className='bg-trans text-accent button'\n                                    >\n                                        Submit\n                                    </button>\n                                </>\n                            )}\n                        </form>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Poll\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router'\nimport { useAuth } from '..'\nimport { useNavigateToHome } from '../_DATA'\nimport Nav from './Nav'\nimport Poll from './Poll'\n\nconst Home = () => {\n\n    const questions = useSelector(store => store.questions)\n    const authedUser = useSelector(store => store.signIn)\n\n    const [answered, setanswered] = useState(false)\n\n    const navigate = useNavigate()\n    const { currentUser } = useAuth()\n\n    let allAnswered = []\n    let allNotAnswered = []\n\n    Object.keys(questions).forEach(q => {\n        if (questions[q].optionTwo.votes.includes(currentUser && currentUser.uid)) {\n            allAnswered.push({\n                id: q,\n                ...questions[q],\n            })\n        } else if (questions[q].optionOne.votes.includes(currentUser && currentUser.uid)) {\n            allAnswered.push({\n                id: q,\n                ...questions[q],\n            })\n        } else {\n            allNotAnswered.push({\n                id: q,\n                ...questions[q],\n            })\n        }\n    })\n\n    allAnswered.sort((a, b) => {\n        return b.timestamp - a.timestamp\n    })\n    allNotAnswered.sort((a, b) => {\n        return b.timestamp - a.timestamp\n    })\n\n    useNavigateToHome(currentUser, navigate)\n\n    return (\n        <div className='fill bg-dark'>\n            <Nav />\n            <div className=\"home-menu flex bg-black underline-indicators\">\n                <button\n                    className={answered ? 'active bg-trans' : 'bg-trans text-accent'}\n                    onClick={() => setanswered(true)}\n                >Answered</button>\n                <button\n                    className={!answered ? 'active bg-trans' : 'bg-trans text-accent'}\n                    onClick={() => setanswered(false)}\n                >Not Answered</button>\n            </div>\n            <ul className='cards-container'>\n                {answered === true\n                    ? (allAnswered.map((poll) => (\n                        <li key={poll.id}>\n                            <Poll poll={poll} answered={true} />\n                        </li>\n                    )))\n                    : (allNotAnswered.map((poll) => (\n                        <li key={poll.id}>\n                            <Poll poll={poll} answered={false} />\n                        </li>\n                    )))\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router'\nimport { Loader } from 'semantic-ui-react'\nimport { useAuth } from '..'\nimport { handleAddQuestion } from '../actions/questions'\nimport { useNavigateToHome } from '../_DATA'\nimport Nav from './Nav'\n\nconst New = () => {\n\n    const [optionOneText, setoptionOne] = useState('')\n    const [optionTwoText, setoptionTwo] = useState('')\n    const [processing, setprocessing] = useState(false)\n\n    const navigate = useNavigate()\n    const { currentUser } = useAuth()\n    const user = useSelector(store => store.signIn.user)\n\n    useNavigateToHome(currentUser, navigate)\n\n    const dispatch = useDispatch()\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setprocessing(true)\n        const data = {\n            optionOneText,\n            optionTwoText,\n            author: currentUser && currentUser.uid\n        }\n        dispatch(handleAddQuestion(data))\n        .then(() => {\n            navigate('/')\n            setprocessing(false)\n        })\n    }\n\n    return (\n        <div className='fill new'>\n            <Nav />\n            <div className=\"card text-white flex\">\n                <div className=\"card-header\">\n                    <p>Posting as {user && user.text}</p>\n                </div>\n                <form\n                    className='flow form'\n                    onSubmit={(e) => handleSubmit(e)}\n                >\n                    {processing ? (\n                        <div className='grid relative'>\n                            <div>\n                                <Loader active size='massive' />\n                            </div>\n                            <span className='fs-500 ff-serif text-accent loading'>Submitting</span>\n                        </div>\n                    ) : (\n                        <>\n                            <div className='form flex'>\n                                <p className='text-accent'>Would You Rather?</p>\n                                <input\n                                    className='form-input bg-dark text-white fs-400 ff-sans-cond'\n                                    type='text'\n                                    placeholder='Enter Option One'\n                                    value={optionOneText}\n                                    onChange={(e) => setoptionOne(e.target.value)}\n                                />\n                                <p>Or</p>\n                                <input\n                                    className='form-input bg-dark text-white fs-400 ff-sans-cond'\n                                    type='text'\n                                    placeholder='Enter Option Two'\n                                    value={optionTwoText}\n                                    onChange={(e) => setoptionTwo(e.target.value)}\n                                />\n                            </div>\n                            <button\n                                className='button d-block fs-500 ff-serif bg-trans text-accent'\n                                type='submit'\n                            >Submit</button>\n                        </>\n                    )}\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default New\n","import React from 'react'\nimport { Image } from 'semantic-ui-react'\nimport { arraying } from '../_DATA'\n\nconst User = ({ user }) => {\n\n    const answers = user && arraying(user.answers).length\n    const questions = user && user.questions.length\n    const total = answers + questions\n\n    return (\n        <div className='card text-white ff-serif flex'>\n            <div className='card-header'>\n                <p className='fs-400'>User Name: <span className='text-accent'>{user.text}</span></p>\n            </div>\n            <div className=\"card-content flex\">\n                <div className='card-img'>\n                    <Image src={user.image.src} size='massive' avatar wrapped  />\n                </div>\n                <div className='card-info'>\n                    <div className=\"flex\">\n                        <p className='fs-400'>Answered Questions </p><span className=\"text-accent\">{answers}</span>\n                    </div>\n                    <div className=\"flex\">\n                        <p className='fs-400'>Created Questions </p><span className=\"text-accent\">{questions}</span>\n                    </div>\n                </div>\n            </div>\n            <div className='card-fotter'>\n                <p>Total Score <span className=\"text-accent\">{total}</span></p>\n            </div>\n        </div>\n    )\n}\n\nexport default User\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router'\nimport { useAuth } from '..'\nimport { arraying, useNavigateToHome } from '../_DATA'\nimport Nav from './Nav'\nimport User from './User'\n\nconst Leaderboard = () => {\n\n    const users = useSelector(store => store.users)\n    const usersArray = users && arraying(users)\n\n    const scoresArray = usersArray && usersArray.map(user => {\n        const answers = arraying(user.answers).length\n        const questions = user.questions.length\n        const total = answers + questions\n        return {\n            ...user,\n            score: total,\n        }\n    }).sort((a,b) => b.score - a.score)\n\n    const { currentUser } = useAuth()\n    const navigate = useNavigate()\n\n    useNavigateToHome(currentUser, navigate)\n\n    return (\n        <div className='fill'>\n            <Nav />\n            <ul className='cards-container'>\n                {scoresArray.map(user => (\n                    <li key={user.id}>\n                        <User user={user} />\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default Leaderboard\n","import { useAuth } from \"..\"\nimport { auth } from \"../firebase/config\"\nimport { getUsers, saveUser } from \"../firebase/firestore\"\nimport { _addUser, _getUsers } from \"../_DATA\"\nimport { signIn } from \"./signin\"\n\nexport const GET_USERS = 'GET_USERS'\nexport const ADD_USER = 'ADD_USER'\n\nconst users = (users) => {\n    return {\n        type: GET_USERS,\n        users,\n    }\n}\n\nexport const handleGetUsers = () => {\n    return (dispatch) => {\n        return getUsers()\n        .then((allUsers => dispatch(users(allUsers))))\n    }\n}\n\nconst addUser = (user) => {\n    return {\n        type: ADD_USER,\n        user,\n    }\n}\n\nexport const handleAddUser = (user, signup) => {\n    return (dispatch) => {\n        return signup(user.username, user.password)\n        .then(() => {\n            saveUser(user).then(u => dispatch(addUser(u)))\n            .then(() => signIn(user))\n            \n        })\n    }\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams, useNavigate } from 'react-router'\nimport { Button, Icon, Message } from 'semantic-ui-react'\nimport { useAuth } from '..'\nimport { useNavigateToHome } from '../_DATA'\nimport Nav from './Nav'\nimport Poll from './Poll'\n\nconst PollView = () => {\n\n    const navigate = useNavigate()\n    const { currentUser } = useAuth()\n\n    useNavigateToHome(currentUser, navigate)\n\n    const { id } = useParams()\n\n    const questions = useSelector(store => store.questions)\n    const poll = questions[id]\n\n    const handleBack = (e) => {\n        e.preventDefault()\n        navigate(-1)\n    }\n\n    if (!poll) {\n        return (\n            <div className='container fill'>\n                <Nav />\n                <Message negative size='massive'>\n                    <Message.Header>We're sorry we couldn't find this poll</Message.Header>\n                    <p>Error 404 NOT FOUND</p>\n                    <Button\n                        labelPosition='right'\n                        label='Go back'\n                        icon floated='left'\n                        \n                        compact\n                        circular\n                        onClick={(e) => handleBack(e)}\n                    >\n                        <Icon name='left arrow' />\n                    </Button>\n                </Message>\n            </div>\n        )\n    }\n\n    return (\n        <div className='container fill'>\n            <Nav />\n            <div className='poll-view'>\n                <Poll poll={poll} viewed={true} />\n            </div>\n        </div>\n    )\n}\n\nexport default PollView\n","export default __webpack_public_path__ + \"static/media/profile.9f4aa540.png\";","import app from \"./config\";\r\nimport { getDownloadURL, getStorage, ref, uploadBytes, uploadBytesResumable } from \"firebase/storage\";\r\n\r\nconst storage = getStorage()\r\n\r\nexport const upload = async (file) => {\r\n    let url = ''\r\n    const storageRef = ref(storage, `${file.name}`)\r\n    await uploadBytes(storageRef, file)\r\n    .then(snapshot => getDownloadURL(snapshot.ref)\r\n    .then(link => url = link))\r\n    return url\r\n    // const url = getDownloadURL(img)\r\n    // .then(() => console.log(url)).catch(e => console.log(e.message))\r\n    // return url\r\n}","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Button, Image, Label, Loader } from 'semantic-ui-react'\nimport { handleAddUser } from '../actions/users'\nimport profile from '../assets/profile.png'\nimport PasswordChecklist from 'react-password-checklist'\nimport { useNavigate } from 'react-router-dom'\nimport Loading from './Loading'\nimport { useAuth } from '..'\nimport { upload } from '../firebase/upload'\n\nconst SignUp = () => {\n    const [url, seturl] = useState(null)\n    const [username, setusername] = useState('')\n    const [password, setpassword] = useState('')\n    const [isHidden, setisHidden] = useState(false)\n    const [processing, setprocessing] = useState(false)\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const { signup } = useAuth()\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (!url) {\n            alert('Please choose a profile picture!')\n            return\n        } else if (username === '') {\n            alert('Please add a user name!')\n            return\n        } else if (password === '' || password.length < 4) {\n            alert('Password should be 4 characters long!')\n            return\n        }\n        setprocessing(true)\n        const user = {\n            url,\n            username,\n            password,\n        }\n\n        dispatch(handleAddUser(user, signup))\n            .then(() => {\n                setTimeout(() => {\n                    navigate('/signin')\n                    setprocessing(false)\n                }, 300);\n            })\n    }\n\n    return (\n        <div className='flex col text-white'>\n            <Button\n                label='Back to Login'\n                color='facebook'\n                icon='left arrow'\n                size='small'\n                onClick={() => navigate('/signin')}\n            />\n            <form\n                className='form flex'\n                onSubmit={(e) => handleSubmit(e)}\n            >\n                <label\n                    htmlFor='img'\n                    style={{ backgroundImage: url ? `url(${url})` : `url(${profile})`, width: '100px', aspectRatio: '1', backgroundSize: 'cover', borderRadius: '50%' }}\n                />\n                <input\n                    style={{ opacity: 0, position: 'absolute', }}\n                    type='file'\n                    id='img'\n                    onChange={(e) => {\n                        setprocessing(true)\n                        upload(e.target.files[0])\n                        .then(link => {\n                            seturl(link)\n                            setprocessing(false)\n                        })\n                        .catch(e => alert(e.message))\n                    }}\n                >\n\n                </input>\n                <label\n                    htmlFor='user-name'>User Name</label>\n                <input\n                    className='form-input bg-dark text-white fs-400 ff-sans-cond'\n                    id='user-name'\n                    name='user-name'\n                    value={username}\n                    type='text'\n                    placeholder='User Name'\n                    onChange={(e) => setusername(e.target.value)}\n                />\n                <label\n                    htmlFor='password'>Password</label>\n                <input\n                    className='form-input bg-dark text-white fs-400 ff-sans-cond'\n                    id='password'\n                    name='password'\n                    value={password}\n                    type='password'\n                    placeholder='Password'\n                    onChange={(e) => {\n                        const test = /^[0-9\\b]+$/\n                        if (test.test(e.target.value) || e.target.value === '') {\n                            setpassword(e.target.value)\n                        } else {\n                            setisHidden(true)\n                        }\n                        setTimeout(() => setisHidden(false), 5000)\n                    }}\n                />\n                <PasswordChecklist\n                    className='text-accent fs-200 ff-sans-cond'\n                    rules={['minLength']}\n                    value={password}\n                    minLength={4}\n                    iconSize={10}\n                    messages={{\n                        minLength: 'Password should be 4 characters long!'\n                    }}\n                />\n                <div className={!isHidden ? 'hide' : ''}>\n                    <Label\n                        basic\n                        color='red'\n                        pointing\n                    >\n                        Please enter numbers only!\n                    </Label>\n                </div>\n                <button\n                    disabled={processing}\n                    type='submit'\n                    className='button bg-trans text-accent'>\n                    {processing ? <Loader active inverted size='small' /> : 'Sign Up'}\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUp\n","import '../App.css';\nimport Signin from './Signin';\nimport Home from './Home';\nimport New from './New';\nimport Leaderboard from './Leaderboard';\nimport { Fragment, useEffect, useState } from 'react';\nimport { handleGetUsers } from '../actions/users';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handleGetQuestions } from '../actions/questions';\nimport { Loader } from 'semantic-ui-react';\nimport { Route, Routes } from 'react-router';\nimport PollView from './PollView';\nimport SignUp from './SignUp';\nimport { useAuth } from '..';\nimport { signIn } from '../actions/signin'\nconst App = () => {\n\n  const dispatch = useDispatch()\n  const { currentUser } = useAuth()\n  const users = useSelector(store => store.users)\n\n  useEffect(() => {\n    dispatch(signIn(users[currentUser && currentUser.uid]))\n  }, [currentUser])\n\n  const [loading, setloading] = useState(true)\n\n  useEffect(() => {\n    dispatch(handleGetUsers())\n      .then(() => dispatch(handleGetQuestions()))\n      .then(() => setloading(false))\n  }, [])\n\n  return (\n    <Fragment>\n      <div>\n        {loading === true\n          ? (\n            <div className='grid'>\n              <div>\n                <Loader active size='massive' />\n              </div>\n              <span className='fs-500 ff-serif text-dark loading'>Loading Data...</span>\n            </div>\n          )\n          : (\n            <Routes>\n              <Route path='/' element={<Home />} />\n              <Route path='/signin' element={<Signin />} />\n              <Route path='/signup' element={<SignUp />} />\n              <Route path='/new' element={<New />} />\n              <Route path='/leaderboard' element={<Leaderboard />} />\n              <Route path='/poll/:id' element={<PollView />} />\n            </Routes>\n          )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux'\nimport { signIn } from './signin'\nimport { users } from './users'\nimport { questions } from './questions'\n\nexport default combineReducers({\n    signIn,\n    users,\n    questions,\n})","import { SIGN_IN, SIGN_OUT } from \"../actions/signin\";\n\nexport const signIn = (state = {\n    user: {},\n    logged: false,\n}, action) => {\n    switch (action.type) {\n        case SIGN_IN:\n            return {\n                user: action.user,\n                logged: action.logged,\n            }\n        case SIGN_OUT:\n            return {\n                user: action.user,\n                logged: action.logged,\n            }\n        default:\n            return state\n    }\n}","import { ADD_QUESTION, ANSWER_QUESTION } from \"../actions/questions\";\nimport { ADD_USER, GET_USERS } from \"../actions/users\";\n\nexport const users = (state = [], action) => {\n    switch (action.type) {\n        case GET_USERS:\n            return action.users\n        case ADD_QUESTION:\n            console.log(action)\n            return {\n                ...state,\n                [action.question.author]: {\n                    ...state[action.question.author],\n                    questions: state[action.question.author].questions.concat([action.authedUser])\n                }\n            }\n        case ANSWER_QUESTION:\n            return {\n                ...state,\n                [action.uid]: {\n                    ...state[action.uid],\n                    answers: {\n                        ...state[action.uid].answers,\n                        [action.qid]: action.answer\n                    }\n                }\n            }\n        case ADD_USER:\n            return {\n                ...state,\n                [action.user.id]: action.user,\n            }\n        default:\n            return state\n    }\n}","import { ADD_QUESTION, ANSWER_QUESTION, GET_QUESTIONS } from \"../actions/questions\";\n\nexport const questions = (state = {}, action) => {\n    switch (action.type) {\n        case GET_QUESTIONS:     \n            return action.questions\n        case ADD_QUESTION:\n            return {\n                ...state,\n                [action.question.id]: action.question,\n            }\n        case ANSWER_QUESTION:     \n            return {\n                ...state,\n                [action.qid]: {\n                    ...state[action.qid],\n                    [action.answer]: {\n                        ...state[action.qid][action.answer],\n                        votes: state[action.qid][action.answer].votes.concat([action.uid])\n                    }\n                }\n            }\n        default:\n            return state\n    }\n}","const logger = (store) => (next) => (action) => {\n    console.group(action.type)\n    console.log('The Action: ', action);\n    const returnValue = next(action)\n    console.log('The New State: ', store.getState());\n    console.groupEnd()\n    return returnValue\n}\n\nexport default logger","import thunk from \"redux-thunk\";\nimport logger from \"./logger\";\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware(\n    thunk,\n    logger,\n)","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\nimport middleware from './middleware'\nimport { HashRouter } from 'react-router-dom';\nimport { auth } from './firebase/config';\nimport { onAuthStateChanged, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\n\nexport const useAuth = () => {\n  const [currentUser, setCurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  function signup(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password)\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password)\n  }\n\n  function logout() {\n    return signOut(auth)\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email)\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email)\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password)\n  }\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user)\n      setLoading(false)\n    })\n\n    return unsubscribe\n  }, [])\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  }\n  return value\n}\n\nconst store = createStore(reducers, middleware)\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store} value={useAuth} >\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}