{"version":3,"sources":["assets/sara.jpg","assets/john.jpg","_DATA.js","assets/tyler.jpg","actions/signin.js","actions/users.js","assets/profile.png","components/SignUp.js","components/Signin.js","components/Nav.js","actions/questions.js","components/Poll.js","components/Home.js","components/New.js","components/User.js","components/Leaderboard.js","components/PollView.js","components/App.js","reducers/index.js","reducers/signin.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","key","text","value","image","avatar","src","sara","answers","questions","password","tylermcginnis","johndoe","john","id","author","timestamp","optionOne","votes","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","arraying","object","Keys","Object","keys","array","forEach","push","useNavigateToHome","navigate","useEffect","logged","alert","SIGN_IN","SIGN_OUT","handleSignIn","user","dispatch","_login","then","type","signIn","GET_USERS","ADD_USER","handleGetUsers","allUsers","handleAddUser","formattedUser","url","username","toLowerCase","replace","formatUser","_addUser","addUser","SignUp","useState","seturl","setusername","setpassword","isHidden","setisHidden","useDispatch","useNavigate","className","Button","label","color","icon","size","onClick","onSubmit","e","preventDefault","length","handleSubmit","Image","profile","onChange","window","URL","createObjectURL","target","files","htmlFor","name","placeholder","test","rules","minLength","iconSize","messages","Label","basic","pointing","Signin","useSelector","store","selectedUser","setselectedUser","img","setimg","signUp","handleSignin","centered","circular","Dropdown","inline","options","defaultValue","currentTarget","textContent","firstChild","getAttribute","i","to","Nav","isExpanded","setisExpanded","isVisible","setisVisible","handleSignout","toggleNav","exact","GET_QUESTIONS","ADD_QUESTION","ANSWER_QUESTION","handleGetQuestions","getQuestions","handleAddQuestion","data","addQuestion","handleAnswerQuestion","qid","answer","_saveQuestionAnswer","answerQuestion","Poll","viewed","poll","answered","setanswered","setanswer","includes","optionOneVotes","optionTwoVotes","total","floated","compact","handleBack","Icon","alt","wrapped","Progress","inverted","percent","round","progress","indicating","Home","allAnswered","allNotAnswered","q","sort","a","b","map","New","setoptionOne","setoptionTwo","console","log","User","Leaderboard","scoresArray","score","PollView","useParams","Message","negative","Header","labelPosition","App","loading","setloading","Loader","active","path","element","combineReducers","state","action","logger","next","group","returnValue","getState","groupEnd","applyMiddleware","thunk","createStore","reducers","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0045aeeb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sara.a8a1e723.jpg\";","export default __webpack_public_path__ + \"static/media/john.103fc5ba.jpg\";","import { useEffect } from \"react\"\nimport sara from './assets/sara.jpg'\nimport john from './assets/john.jpg'\nimport tyler from './assets/tyler.jpg'\n\nlet authedUser\n\nlet users = {\n  sarahedo: {\n    key: 'sarahedo',\n    text: 'Sarah Edo',\n    value: 'Sarah Edo',\n    image: { avatar: true, src: sara },\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\n    password: '1234',\n  },\n  tylermcginnis: {\n    key: 'tylermcginnis',\n    text: 'Tyler McGinnis',\n    value: 'Tyler McGinnis',\n    image: { avatar: true, src: tyler },\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    password: '1234',\n  },\n  johndoe: {\n    key: 'johndoe',\n    text: 'John Doe',\n    value: 'John Doe',\n    image: { avatar: true, src: john },\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    password: '1234',\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID() {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000)\n  })\n}\n\nconst formatUser = ({ url, username, password }) => {\n  return {\n    key: username.toLowerCase().replace(/\\s/g, ''),\n    text: username,\n    value: username,\n    image: { avatar: true, src: url },\n    answers: {},\n    questions: [],\n    password,\n  }\n}\n\nexport function _addUser(user) {\n  return new Promise((res, rej) => {\n    const formattedUser = formatUser(user)\n    setTimeout(() => {\n      users = {\n        ...users,\n        [formattedUser.key]: formattedUser,\n      }\n      res(formattedUser)\n    }, 1000)\n  })\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000)\n  })\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n\nexport const arraying = (object) => {\n  const Keys = Object.keys(object)\n  let array = []\n  Keys.forEach((key) => {\n    array.push(object[key])\n  })\n  return array\n}\n\nexport const useNavigateToHome = (authedUser ,navigate) => {\n  useEffect(() => {\n    if (!authedUser.logged) {\n      navigate('/signin')\n      setTimeout(() => alert('Please login to view the app'), 100)\n    }\n  }, [authedUser, navigate])\n}\n\nexport function _login (user) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      authedUser = user\n      res()\n    }, 0)\n  })\n}","export default __webpack_public_path__ + \"static/media/tyler.e6a9ee54.jpg\";","import { _login } from \"../_DATA\"\r\n\r\nexport const SIGN_IN = 'SIGN_IN'\r\nexport const SIGN_OUT = 'SIGN_OUT'\r\n\r\nconst signIn = (user) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        user,\r\n        logged: true,\r\n    }\r\n}\r\n\r\nexport const handleSignIn = (user) => {\r\n    return (dispatch) => {\r\n        return _login(user)\r\n        .then(() => dispatch(signIn(user)))\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT,\r\n        user: {},\r\n        logged: false,\r\n    }\r\n}","import { _addUser, _getUsers } from \"../_DATA\"\r\n\r\nexport const GET_USERS = 'GET_USERS'\r\nexport const ADD_USER = 'ADD_USER'\r\n\r\nconst users = (users) => {\r\n    return {\r\n        type: GET_USERS,\r\n        users,\r\n    }\r\n}\r\n\r\nexport const handleGetUsers = () => {\r\n    return (dispatch) => {\r\n        return _getUsers()\r\n        .then((allUsers => dispatch(users(allUsers))))\r\n    }\r\n}\r\n\r\nconst addUser = (user) => {\r\n    return {\r\n        type: ADD_USER,\r\n        user,\r\n    }\r\n}\r\n\r\nexport const handleAddUser = (user) => {\r\n    return (dispatch) => {\r\n        return _addUser(user)\r\n        .then(user => dispatch(addUser(user)))\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/profile.9f4aa540.png\";","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Image, Label } from 'semantic-ui-react'\r\nimport { handleAddUser } from '../actions/users'\r\nimport profile from '../assets/profile.png'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst SignUp = () => {\r\n    const [url, seturl] = useState(null)\r\n    const [username, setusername] = useState('')\r\n    const [password, setpassword] = useState('')\r\n    const [isHidden, setisHidden] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!url) {\r\n            alert('Please choose a profile picture!')\r\n            return\r\n        } else if (username === '') {\r\n            alert('Please add a user name!')\r\n            return\r\n        } else if (password === '' || password.length < 4) {\r\n            alert('Password should be 4 characters long!')\r\n            return\r\n        }\r\n        const user = {\r\n            url,\r\n            username,\r\n            password,\r\n        }\r\n        dispatch(handleAddUser(user))\r\n        .then(() => navigate('/signin'))\r\n    }\r\n    return (\r\n        <div className='flex col text-white'>\r\n            <Button\r\n                label='Back to Login'\r\n                color='facebook'\r\n                icon='left arrow'\r\n                size='small'\r\n                onClick={() => navigate('/signin')}\r\n                />\r\n            <form\r\n                className='form flex'\r\n                onSubmit={(e) => handleSubmit(e)}\r\n            >\r\n                <Image\r\n                    src={url ? url : profile}\r\n                    avatar\r\n                    size='small'\r\n                />\r\n                <input\r\n                    type='file'\r\n                    onChange={(e) => seturl(window.URL.createObjectURL(e.target.files[0]))}\r\n                >\r\n\r\n                </input>\r\n                <label\r\n                    htmlFor='user-name'>User Name</label>\r\n                <input\r\n                    className='form-input bg-dark text-white fs-400 ff-sans-cond'\r\n                    id='user-name'\r\n                    name='user-name'\r\n                    value={username}\r\n                    type='text'\r\n                    placeholder='User Name'\r\n                    onChange={(e) => setusername(e.target.value)}\r\n                />\r\n                <label\r\n                    htmlFor='password'>Password</label>\r\n                <input\r\n                    className='form-input bg-dark text-white fs-400 ff-sans-cond'\r\n                    id='password'\r\n                    name='password'\r\n                    value={password}\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    onChange={(e) => {\r\n                        const test = /^[0-9\\b]+$/\r\n                        if (test.test(e.target.value) || e.target.value === '') {\r\n                            setpassword(e.target.value)\r\n                        } else {\r\n                            setisHidden(true)\r\n                        }\r\n                        setTimeout(() => setisHidden(false), 5000)\r\n                    }}\r\n                />\r\n                <PasswordChecklist\r\n                    className='text-accent fs-200 ff-sans-cond'\r\n                    rules={['minLength']}\r\n                    value={password}\r\n                    minLength={4}\r\n                    iconSize={10}\r\n                    messages={{\r\n                        minLength: 'Password should be 4 characters long!'\r\n                    }}\r\n                    />\r\n                <div className={!isHidden ? 'hide' : ''}>\r\n                    <Label\r\n                        basic\r\n                        color='red'\r\n                        pointing\r\n                        >\r\n                        Please enter numbers only!\r\n                    </Label>\r\n                </div>\r\n                <button\r\n                    type='submit'\r\n                    className='button bg-trans text-accent'>\r\n                    Sign Up\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Dropdown, Image, Label } from \"semantic-ui-react\"\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { handleSignIn } from \"../actions/signin\"\r\nimport { arraying } from \"../_DATA\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { Link } from \"react-router-dom\"\r\nimport SignUp from \"./SignUp\"\r\n\r\nconst Signin = () => {\r\n\r\n    const users = arraying(useSelector((store) => store.users))\r\n\r\n    const [selectedUser, setselectedUser] = useState(users[0].text)\r\n    const [img, setimg] = useState(users[0].image.src)\r\n    const [password, setpassword] = useState('')\r\n    const [isHidden, setisHidden] = useState(false)\r\n    const [signUp, setsignUp] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const handleSignin = (e, user) => {\r\n        e.preventDefault()\r\n        if (password !== user.password) {\r\n            alert('Incorrect Password!')\r\n\r\n            return\r\n        }\r\n        dispatch(handleSignIn(user))\r\n            .then(() => navigate('/'))\r\n    }\r\n\r\n    return (\r\n        <div className='signin container bg-dark text-white'>\r\n            <Image src={img} centered circular size='small' />\r\n            <div className='dropdown flex container'>\r\n                <span className='fs-400 ff-sans-cond text-white'>Select Your User Name:\r\n                    <Dropdown\r\n                        className='fs-400 ff-sans-normal text-white'\r\n                        inline\r\n                        options={users}\r\n                        defaultValue={users[0].value}\r\n                        onChange={(e) => {\r\n                            setselectedUser(e.currentTarget.textContent)\r\n                            setimg(e.currentTarget.firstChild.getAttribute('src'))\r\n                        }}\r\n                    />\r\n                </span>\r\n                <input\r\n                    className='form-input bg-dark text-white fs-400 ff-sans-cond'\r\n                    type='password'\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                        const test = /^[0-9\\b]+$/\r\n                        if (test.test(e.target.value) || e.target.value === '') {\r\n                            setpassword(e.target.value)\r\n                        } else {\r\n                            setisHidden(true)\r\n                        }\r\n                        setTimeout(() => setisHidden(false), 5000)\r\n                    }}\r\n                    placeholder=\"Password\" />\r\n                <div className={!isHidden ? 'hide' : ''}>\r\n                    <Label\r\n                        basic\r\n                        color='red'\r\n                        pointing\r\n                    >\r\n                        Please enter numbers only!\r\n                    </Label>\r\n                </div>\r\n            </div>\r\n            <div className=\"underline-indicators container\">\r\n                <button\r\n                    className='d-block fs-500 ff-serif bg-dark text-accent'\r\n                    onClick={(e) => {\r\n                        if (!selectedUser) {\r\n                            alert('Please Select Your User Name')\r\n                            return\r\n                        }\r\n                        for (let i = 0; i < users.length; i++) {\r\n                            const target = users[i]\r\n                            if (target.text === selectedUser) {\r\n                                handleSignin(e, target)\r\n                            }\r\n                        }\r\n                    }}>\r\n                    Sign In\r\n                </button>\r\n            </div>\r\n            <Link\r\n                to={'/signup'}\r\n                className='d-block fs-400 ff-serif bg-dark text-accent'\r\n            >\r\n                {!signUp ? 'New User? Sign Up here.': 'Close'}\r\n            </Link>\r\n            {signUp && <SignUp />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Button } from 'semantic-ui-react'\r\nimport { signOut } from '../actions/signin'\r\n\r\nconst Nav = () => {\r\n\r\n    const user = useSelector((store) => store.signIn.user)\r\n\r\n    const [isExpanded, setisExpanded] = useState(false)\r\n    const [isVisible, setisVisible] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const handleSignout = () => {\r\n        dispatch(signOut())\r\n        navigate('/signin')\r\n    }\r\n\r\n    const toggleNav = (e) => {\r\n        e.preventDefault()\r\n        if (!isVisible) {\r\n            setisVisible(true)\r\n            setisExpanded(true)\r\n        } else {\r\n            setisVisible(false)\r\n            setisExpanded(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='primary-header flex bg-dark'>\r\n            <p\r\n                className='fs-300 ff-serif text-white user-name'\r\n            >Welcome <span\r\n                className='ff-serif fs-400 text-accent'\r\n            >{user && user.text}\r\n                </span>\r\n                !</p>\r\n            <button\r\n                onClick={(e) => toggleNav(e)}\r\n                aria-expanded={isExpanded}\r\n                className='mobile-nav-toggle'\r\n            ><span\r\n                className='sr-only'\r\n            >Menu</span></button>\r\n            <div\r\n                data-visible={isVisible}\r\n                className='nav primary-navigation underline-indicators flex'\r\n            >\r\n                <Link\r\n                    to='/'\r\n                    exact='true'\r\n                    className='fs-400 ff-sans-cond text-white'\r\n                >\r\n                    Home\r\n                </Link>\r\n                <Link\r\n                    to='/new'\r\n                    className='fs-400 ff-sans-cond text-white'\r\n                >\r\n                    New Poll\r\n                </Link>\r\n                <Link\r\n                    to='/leaderboard'\r\n                    className='fs-400 ff-sans-cond text-white'\r\n                >\r\n                    Leaderboard\r\n                </Link>\r\n                <Link\r\n                    to='/signin'\r\n                    onClick={() => handleSignout()}\r\n                    className='fs-400 ff-sans-cond text-white'\r\n                >\r\n                    Sign Out\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Nav\r\n","import { _getQuestions, _saveQuestion, _saveQuestionAnswer } from \"../_DATA\"\r\n\r\nexport const GET_QUESTIONS = 'GET_QUESTIONS'\r\nexport const ADD_QUESTION = 'ADD_QUESTION'\r\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\r\n\r\nconst getQuestions = (questions) => {\r\n    return {\r\n        type: GET_QUESTIONS,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport const handleGetQuestions = () => {\r\n    return (dispatch) => {\r\n        return _getQuestions()\r\n            .then((questions) => dispatch(getQuestions(questions)))\r\n    }\r\n}\r\n\r\nconst addQuestion = (question) => {\r\n    return {\r\n        type: ADD_QUESTION,\r\n        question,\r\n    }\r\n}\r\n\r\nexport const handleAddQuestion = (data) => {\r\n    return (dispatch) => {\r\n        return _saveQuestion(data)\r\n        .then(question => dispatch(addQuestion(question)))\r\n    }\r\n}\r\n\r\nconst answerQuestion = (question) => {\r\n    return {\r\n        type: ANSWER_QUESTION,\r\n        authedUser: question.authedUser,\r\n        qid: question.qid,\r\n        answer: question.answer,\r\n    }\r\n}\r\n\r\nexport const handleAnswerQuestion = (question) => {\r\n    return (dispatch) => {\r\n        return _saveQuestionAnswer(question)\r\n        .then(() => dispatch(answerQuestion(question)))\r\n    }\r\n}","import React, { Component, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Form, Icon, Image, Message, Progress } from 'semantic-ui-react'\r\nimport { handleAnswerQuestion } from '../actions/questions'\r\n\r\nconst Poll = ({ viewed, poll }) => {\r\n\r\n    const { id, author, optionOne, optionTwo } = poll\r\n\r\n    const users = useSelector(store => store.users)\r\n    const authedUser = useSelector(store => store.signIn.user)\r\n\r\n    const [answered, setanswered] = useState(false)\r\n    const [answer, setanswer] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (optionOne.votes.includes(authedUser.key)\r\n            || optionTwo.votes.includes(authedUser.key)) {\r\n            setanswered(true)\r\n        } else {\r\n            setanswered(false)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const user = users[author]\r\n\r\n    const optionOneVotes = optionOne.votes.length\r\n    const optionTwoVotes = optionTwo.votes.length\r\n    const total = optionOneVotes + optionTwoVotes\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (answer === '') {\r\n            alert('Please choose an answer!')\r\n            return\r\n        }\r\n        const question = {\r\n            authedUser: authedUser.key,\r\n            qid: id,\r\n            answer,\r\n        }\r\n        dispatch(handleAnswerQuestion(question))\r\n        .then(() => {\r\n            setanswered(true)\r\n        })\r\n    }\r\n\r\n    const handleBack = (e) => {\r\n        e.preventDefault()\r\n        navigate(-1)\r\n    }\r\n\r\n    return (\r\n        <div className='flex text-white card ff-serif'>\r\n            <div className='card-header flex'>\r\n                <p className='fs-400'>{user.text} asked:</p>\r\n                {viewed && (\r\n                    <Button\r\n                        icon floated='right'\r\n                        size='mini'\r\n                        compact\r\n                        circular\r\n                        onClick={(e) => handleBack(e)}\r\n                    >\r\n                        <Icon name='left arrow' />\r\n                    </Button>\r\n                )}\r\n            </div>\r\n            <div className='card-content flex'>\r\n                <div className='card-img'><Image src={user.image.src} alt='user avatar' size='massive' avatar wrapped /></div>\r\n                <div className=\"card-info\">\r\n                    {!viewed && (\r\n                        <div>\r\n                            <p className='uppercase text-accent'>Would You Rather?</p>\r\n                            <p className='fs-400 ff-sans-cond'>{poll.optionOne.text} or ...</p>\r\n                            <Link\r\n                                className='button d-block fs-500 ff-serif bg-trans text-accent'\r\n                                to={`/poll/${poll.id}`}>View</Link>\r\n                        </div>\r\n                    )}\r\n                    {viewed && answered && (\r\n                        <div className='flex col'>\r\n                            <p>Would You Rather?</p>\r\n                            <div className={poll.optionOne.votes.includes(authedUser.key)\r\n                                ? 'selected-answer flex col card-answer'\r\n                                : 'not-selected-answer flex col card-answer'\r\n                            }>\r\n                                <p>{poll.optionOne.text}</p>\r\n                                <div className='prog'>\r\n                                    <Progress\r\n                                        inverted\r\n                                        percent={Math.round(optionOneVotes / total * 100)}\r\n                                        progress\r\n                                        indicating\r\n                                    />\r\n                                </div>\r\n                                <p>{optionOneVotes} out of {total} votes</p>\r\n                            </div>\r\n                            <div className={poll.optionTwo.votes.includes(authedUser.key)\r\n                                ? 'selected-answer flex col card-answer'\r\n                                : 'not-selected-answer flex col card-answer'\r\n                            }>\r\n                                <p>{poll.optionTwo.text}</p>\r\n                                <div className='prog'>\r\n                                    <Progress\r\n                                        inverted\r\n                                        percent={Math.round(optionTwoVotes / total * 100)}\r\n                                        progress\r\n                                        indicating\r\n                                    />\r\n                                </div>\r\n                                <p>{optionTwoVotes} out of {total} votes</p>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {viewed && answered === false && (\r\n                        <form\r\n                            onSubmit={(e) => handleSubmit(e)}\r\n                            className='flow form'\r\n                        >\r\n                            <p>Would You Rather?</p>\r\n                            <div className='flex'>\r\n                                <input\r\n                                    type='radio'\r\n                                    id='optionOne'\r\n                                    name='options'\r\n                                    value={poll.optionOne.text}\r\n                                    onChange={(e) => setanswer(e.target.id)} />\r\n                                <p className='ff-sans-cond fs-400'>{poll.optionOne.text}</p>\r\n                            </div>\r\n                            <div className='flex'>\r\n                                <input\r\n                                    type='radio'\r\n                                    id='optionTwo'\r\n                                    name='options'\r\n                                    value={poll.optionTwo.text}\r\n                                    onChange={(e) => setanswer(e.target.id)} />\r\n                                <p className='ff-sans-cond fs-400'>{poll.optionTwo.text}</p>\r\n                            </div>\r\n                            <button\r\n                                type='submit'\r\n                                className='bg-trans text-accent button'\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </form>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Poll\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router'\r\nimport { useNavigateToHome } from '../_DATA'\r\nimport Nav from './Nav'\r\nimport Poll from './Poll'\r\n\r\nconst Home = () => {\r\n\r\n    const questions = useSelector(store => store.questions)\r\n    const authedUser = useSelector(store => store.signIn)\r\n\r\n    const [answered, setanswered] = useState(false)\r\n    \r\n    const navigate = useNavigate()\r\n\r\n    let allAnswered = []\r\n    let allNotAnswered = []\r\n\r\n    Object.keys(questions).forEach(q => {\r\n        if (questions[q].optionTwo.votes.includes(authedUser.user.key)) {\r\n            allAnswered.push(questions[q])\r\n        } else if (questions[q].optionOne.votes.includes(authedUser.user.key)) {\r\n            allAnswered.push(questions[q])\r\n        } else {\r\n            allNotAnswered.push(questions[q])\r\n        }\r\n    })\r\n\r\n    allAnswered.sort((a,b) => {\r\n        return b.timestamp - a.timestamp\r\n    })\r\n    allNotAnswered.sort((a,b) => {\r\n        return b.timestamp - a.timestamp\r\n    })\r\n\r\n    useNavigateToHome(authedUser, navigate)\r\n\r\n    return (\r\n        <div className='fill bg-dark'>\r\n            <Nav />\r\n            <div className=\"home-menu flex bg-black underline-indicators\">\r\n                <button\r\n                    className={answered ? 'active bg-trans' : 'bg-trans text-accent'}\r\n                    onClick={() => setanswered(true)}\r\n                >Answered</button>\r\n                <button\r\n                    className={!answered ? 'active bg-trans' : 'bg-trans text-accent'}\r\n                    onClick={() => setanswered(false)}\r\n                >Not Answered</button>\r\n            </div>\r\n            <ul className='cards-container'>\r\n                {answered === true\r\n                    ? (allAnswered.map((poll) => (\r\n                        <li key={poll.id}>\r\n                            <Poll poll={poll} answered={true} />\r\n                        </li>\r\n                    )))\r\n                    : (allNotAnswered.map((poll) => (\r\n                        <li key={poll.id}>\r\n                            <Poll poll={poll} answered={false} />\r\n                        </li>\r\n                    )))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router'\r\nimport { handleAddQuestion } from '../actions/questions'\r\nimport { useNavigateToHome } from '../_DATA'\r\nimport Nav from './Nav'\r\n\r\nconst New = () => {\r\n\r\n    const [optionOneText, setoptionOne] = useState('')\r\n    const [optionTwoText, setoptionTwo] = useState('')\r\n    const authedUser = useSelector(store => store.signIn)\r\n    const navigate = useNavigate()\r\n\r\n    useNavigateToHome(authedUser, navigate)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const data = {\r\n            optionOneText,\r\n            optionTwoText,\r\n            author: authedUser.user.key\r\n        }\r\n        console.log(data);\r\n        dispatch(handleAddQuestion(data))\r\n        navigate('/')\r\n    }\r\n    \r\n    return (\r\n        <div className='fill new'>\r\n            <Nav />\r\n            <div className=\"card text-white flex\">\r\n                <div className=\"card-header\">\r\n                    <p>Posting as {authedUser.user.text}</p>\r\n                </div>\r\n                <form\r\n                    className='flow form'\r\n                    onSubmit={(e) => handleSubmit(e)}\r\n                    >\r\n                    <div className='form flex'>\r\n                        <p className='text-accent'>Would You Rather?</p>\r\n                        <input\r\n                        className='form-input bg-dark text-white fs-400 ff-sans-cond'\r\n                        type='text'\r\n                        placeholder='Enter Option One'\r\n                        value={optionOneText}\r\n                        onChange={(e) => setoptionOne(e.target.value)}\r\n                        />\r\n                        <p>Or</p>\r\n                        <input\r\n                        className='form-input bg-dark text-white fs-400 ff-sans-cond'\r\n                        type='text'\r\n                        placeholder='Enter Option Two'\r\n                        value={optionTwoText}\r\n                        onChange={(e) => setoptionTwo(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                    className='button d-block fs-500 ff-serif bg-trans text-accent'\r\n                    type='submit'\r\n                    >Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default New\r\n","import React from 'react'\r\nimport { Image } from 'semantic-ui-react'\r\nimport { arraying } from '../_DATA'\r\n\r\nconst User = ({ user }) => {\r\n\r\n    const answers = arraying(user.answers).length\r\n    const questions = user.questions.length\r\n    const total = answers + questions\r\n\r\n    return (\r\n        <div className='card text-white ff-serif flex'>\r\n            <div className='card-header'>\r\n                <p className='fs-400'>User Name: <span className='text-accent'>{user.text}</span></p>\r\n            </div>\r\n            <div className=\"card-content flex\">\r\n                <div className='card-img'>\r\n                    <Image src={user.image.src} size='massive' avatar wrapped  />\r\n                </div>\r\n                <div className='card-info'>\r\n                    <div className=\"flex\">\r\n                        <p className='fs-400'>Answered Questions </p><span className=\"text-accent\">{answers}</span>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <p className='fs-400'>Created Questions </p><span className=\"text-accent\">{questions}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='card-fotter'>\r\n                <p>Total Score <span className=\"text-accent\">{total}</span></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router'\r\nimport { arraying, useNavigateToHome } from '../_DATA'\r\nimport Nav from './Nav'\r\nimport User from './User'\r\n\r\nconst Leaderboard = () => {\r\n\r\n    const users = useSelector(store => store.users)\r\n    const usersArray = arraying(users)\r\n\r\n    const scoresArray = usersArray.map(user => {\r\n        const answers = arraying(user.answers).length\r\n        const questions = user.questions.length\r\n        const total = answers + questions\r\n        return {\r\n            ...user,\r\n            score: total,\r\n        }\r\n    }).sort((a,b) => b.score - a.score)\r\n\r\n    const authedUser = useSelector(store => store.signIn)\r\n    const navigate = useNavigate()\r\n\r\n    useNavigateToHome(authedUser, navigate)\r\n\r\n    return (\r\n        <div className='fill'>\r\n            <Nav />\r\n            <ul className='cards-container'>\r\n                {scoresArray.map(user => (\r\n                    <li key={user.key}>\r\n                        <User user={user} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Leaderboard\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams, useNavigate } from 'react-router'\r\nimport { Button, Icon, Message } from 'semantic-ui-react'\r\nimport { useNavigateToHome } from '../_DATA'\r\nimport Nav from './Nav'\r\nimport Poll from './Poll'\r\n\r\nconst PollView = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const authedUser = useSelector(store => store.signIn)\r\n\r\n    useNavigateToHome(authedUser, navigate)\r\n\r\n    const { id } = useParams()\r\n\r\n    const questions = useSelector(store => store.questions)\r\n    const poll = questions[id]\r\n\r\n    const handleBack = (e) => {\r\n        e.preventDefault()\r\n        navigate(-1)\r\n    }\r\n\r\n    if (!poll) {\r\n        return (\r\n            <div className='container fill'>\r\n                <Nav />\r\n                <Message negative size='massive'>\r\n                    <Message.Header>We're sorry we couldn't find this poll</Message.Header>\r\n                    <p>Error 404 NOT FOUND</p>\r\n                    <Button\r\n                        labelPosition='right'\r\n                        label='Go back'\r\n                        icon floated='left'\r\n                        \r\n                        compact\r\n                        circular\r\n                        onClick={(e) => handleBack(e)}\r\n                    >\r\n                        <Icon name='left arrow' />\r\n                    </Button>\r\n                </Message>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='container fill'>\r\n            <Nav />\r\n            <div className='poll-view'>\r\n                <Poll poll={poll} viewed={true} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PollView\r\n","import '../App.css';\nimport Signin from './Signin';\nimport Home from './Home';\nimport New from './New';\nimport Leaderboard from './Leaderboard';\nimport { Fragment, useEffect, useState } from 'react';\nimport { handleGetUsers } from '../actions/users';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handleGetQuestions } from '../actions/questions';\nimport { Loader } from 'semantic-ui-react';\nimport { useNavigate, Route, Routes } from 'react-router';\nimport PollView from './PollView';\nimport SignUp from './SignUp';\n\nconst App = () => {\n\n  const [loading, setloading] = useState(true)\n\n  const authedUser = useSelector(store => store.signIn)\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    dispatch(handleGetUsers())\n      .then(() => dispatch(handleGetQuestions()))\n      .then(() => setloading(false))\n    if (!authedUser) {\n      navigate('/signin')\n    }\n  }, [dispatch])\n\n  return (\n    <Fragment>\n      <div>\n        {loading === true\n          ? (\n            <div className='grid'>\n              <div>\n                <Loader active size='massive' />\n              </div>\n              <span className='fs-500 ff-serif text-dark loading'>Loading Data...</span>\n            </div>\n          )\n          : (\n            <Routes>\n              <Route path='/' element={<Home />} />\n              <Route path='/signin' element={<Signin />} />\n              <Route path='/signup' element={<SignUp />} />\n              <Route path='/new' element={<New />} />\n              <Route path='/leaderboard' element={<Leaderboard />} />\n              <Route path='/poll/:id' element={<PollView />} />\n            </Routes>\n          )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux'\r\nimport { signIn } from './signin'\r\nimport { users } from './users'\r\nimport { questions } from './questions'\r\n\r\nexport default combineReducers({\r\n    signIn,\r\n    users,\r\n    questions,\r\n})","import { SIGN_IN, SIGN_OUT } from \"../actions/signin\";\r\n\r\nexport const signIn = (state = {\r\n    user: {},\r\n    logged: false,\r\n}, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return {\r\n                user: action.user,\r\n                logged: action.logged,\r\n            }\r\n        case SIGN_OUT:\r\n            return {\r\n                user: action.user,\r\n                logged: action.logged,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ANSWER_QUESTION } from \"../actions/questions\";\r\nimport { ADD_USER, GET_USERS } from \"../actions/users\";\r\n\r\nexport const users = (state = [], action) => {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return action.users\r\n        case ANSWER_QUESTION:\r\n            return {\r\n                ...state,\r\n                [action.authedUser]: {\r\n                    ...state[action.authedUser],\r\n                    answers: {\r\n                        ...state[action.authedUser].answers,\r\n                        [action.qid]: action.answer\r\n                    }\r\n                }\r\n            }\r\n        case ADD_USER:\r\n            return {\r\n                ...state,\r\n                [action.user.key]: action.user,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ADD_QUESTION, ANSWER_QUESTION, GET_QUESTIONS } from \"../actions/questions\";\r\n\r\nexport const questions = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_QUESTIONS:     \r\n            return action.questions\r\n        case ADD_QUESTION:     \r\n            return {\r\n                ...state,\r\n                [action.question.id]: action.question,\r\n            }\r\n        case ANSWER_QUESTION:     \r\n            return {\r\n                ...state,\r\n                [action.qid]: {\r\n                    ...state[action.qid],\r\n                    [action.answer]: {\r\n                        ...state[action.qid][action.answer],\r\n                        votes: state[action.qid][action.answer].votes.concat([action.authedUser])\r\n                    }\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type)\r\n    console.log('The Action: ', action);\r\n    const returnValue = next(action)\r\n    console.log('The New State: ', store.getState());\r\n    console.groupEnd()\r\n    return returnValue\r\n}\r\n\r\nexport default logger","import thunk from \"redux-thunk\";\r\nimport logger from \"./logger\";\r\nimport { applyMiddleware } from 'redux'\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger,\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\nimport middleware from './middleware'\nimport { HashRouter } from 'react-router-dom';\n\nconst store = createStore(reducers, middleware)\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}