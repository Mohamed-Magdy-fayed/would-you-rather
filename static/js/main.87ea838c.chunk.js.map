{"version":3,"sources":["assets/sara.jpg","assets/john.jpg","_DATA.js","assets/tyler.jpg","actions/signin.js","components/Signin.js","components/Nav.js","actions/questions.js","components/Poll.js","components/Home.js","components/New.js","components/User.js","components/Leaderboard.js","actions/users.js","components/PollView.js","assets/profile.png","components/SignUp.js","components/App.js","reducers/index.js","reducers/signin.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","key","text","value","image","avatar","src","sara","answers","questions","password","tylermcginnis","johndoe","john","id","author","timestamp","optionOne","votes","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","arraying","object","Keys","Object","keys","array","forEach","push","useNavigateToHome","navigate","useEffect","logged","alert","SIGN_IN","SIGN_OUT","handleSignIn","user","dispatch","_login","then","type","signIn","Signin","useSelector","store","useState","selectedUser","setselectedUser","img","setimg","setpassword","isHidden","setisHidden","useDispatch","useNavigate","handleSignin","e","preventDefault","className","Image","centered","circular","size","Dropdown","inline","options","defaultValue","onChange","currentTarget","textContent","firstChild","getAttribute","name","test","target","placeholder","Label","basic","color","pointing","onClick","i","length","to","Nav","isExpanded","setisExpanded","isVisible","setisVisible","handleSignout","toggleNav","exact","GET_QUESTIONS","ADD_QUESTION","ANSWER_QUESTION","handleGetQuestions","getQuestions","handleAddQuestion","data","addQuestion","handleAnswerQuestion","qid","answer","_saveQuestionAnswer","answerQuestion","Poll","viewed","poll","answered","setanswered","setanswer","includes","optionOneVotes","optionTwoVotes","total","Button","icon","floated","compact","handleBack","Icon","alt","wrapped","Progress","inverted","percent","round","progress","indicating","onSubmit","handleSubmit","Home","allAnswered","allNotAnswered","q","sort","a","b","map","New","setoptionOne","setoptionTwo","User","Leaderboard","scoresArray","score","GET_USERS","ADD_USER","handleGetUsers","allUsers","handleAddUser","formattedUser","url","username","toLowerCase","replace","formatUser","_addUser","addUser","PollView","useParams","Message","negative","Header","labelPosition","label","SignUp","seturl","setusername","profile","window","URL","createObjectURL","files","htmlFor","rules","minLength","iconSize","messages","App","loading","setloading","Loader","active","path","element","combineReducers","state","action","logger","next","console","group","log","returnValue","getState","groupEnd","applyMiddleware","thunk","createStore","reducers","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87ea838c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sara.a8a1e723.jpg\";","export default __webpack_public_path__ + \"static/media/john.103fc5ba.jpg\";","import { useEffect } from \"react\"\nimport sara from './assets/sara.jpg'\nimport john from './assets/john.jpg'\nimport tyler from './assets/tyler.jpg'\n\nlet authedUser\n\nlet users = {\n  sarahedo: {\n    key: 'sarahedo',\n    text: 'Sarah Edo',\n    value: 'Sarah Edo',\n    image: { avatar: true, src: sara },\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\n    password: '1234',\n  },\n  tylermcginnis: {\n    key: 'tylermcginnis',\n    text: 'Tyler McGinnis',\n    value: 'Tyler McGinnis',\n    image: { avatar: true, src: tyler },\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    password: '1234',\n  },\n  johndoe: {\n    key: 'johndoe',\n    text: 'John Doe',\n    value: 'John Doe',\n    image: { avatar: true, src: john },\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    password: '1234',\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID() {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000)\n  })\n}\n\nconst formatUser = ({ url, username, password }) => {\n  return {\n    key: username.toLowerCase().replace(/\\s/g, ''),\n    text: username,\n    value: username,\n    image: { avatar: true, src: url },\n    answers: {},\n    questions: [],\n    password,\n  }\n}\n\nexport function _addUser(user) {\n  return new Promise((res, rej) => {\n    const formattedUser = formatUser(user)\n    setTimeout(() => {\n      users = {\n        ...users,\n        [formattedUser.key]: formattedUser,\n      }\n      res(formattedUser)\n    }, 1000)\n  })\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000)\n  })\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n\nexport const arraying = (object) => {\n  const Keys = Object.keys(object)\n  let array = []\n  Keys.forEach((key) => {\n    array.push(object[key])\n  })\n  return array\n}\n\nexport const useNavigateToHome = (authedUser ,navigate) => {\n  useEffect(() => {\n    if (!authedUser.logged) {\n      navigate('/signin')\n      setTimeout(() => alert('Please login to view the app'), 100)\n    }\n  }, [authedUser, navigate])\n}\n\nexport function _login (user) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      authedUser = user\n      res()\n    }, 0)\n  })\n}","export default __webpack_public_path__ + \"static/media/tyler.e6a9ee54.jpg\";","import { _login } from \"../_DATA\"\r\n\r\nexport const SIGN_IN = 'SIGN_IN'\r\nexport const SIGN_OUT = 'SIGN_OUT'\r\n\r\nconst signIn = (user) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        user,\r\n        logged: true,\r\n    }\r\n}\r\n\r\nexport const handleSignIn = (user) => {\r\n    return (dispatch) => {\r\n        return _login(user)\r\n        .then(() => dispatch(signIn(user)))\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT,\r\n        user: {},\r\n        logged: false,\r\n    }\r\n}","import { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Dropdown, Image, Label } from \"semantic-ui-react\"\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { handleSignIn } from \"../actions/signin\"\r\nimport { arraying } from \"../_DATA\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Signin = () => {\r\n\r\n    const users = arraying(useSelector((store) => store.users))\r\n\r\n    const [selectedUser, setselectedUser] = useState(users[0].text)\r\n    const [img, setimg] = useState(users[0].image.src)\r\n    const [password, setpassword] = useState('')\r\n    const [isHidden, setisHidden] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const handleSignin = (e, user) => {\r\n        e.preventDefault()\r\n        if (password !== user.password) {\r\n            alert('Incorrect Password!')\r\n\r\n            return\r\n        }\r\n        dispatch(handleSignIn(user))\r\n            .then(() => navigate('/'))\r\n    }\r\n\r\n    return (\r\n        <div className='signin container bg-dark text-white'>\r\n            <Image src={img} centered circular size='small' />\r\n            <div className='dropdown flex container'>\r\n                <span className='fs-400 ff-sans-cond text-white'>Select Your User Name:\r\n                    <Dropdown\r\n                        className='fs-400 ff-sans-normal text-white'\r\n                        inline\r\n                        options={users}\r\n                        defaultValue={users[0].value}\r\n                        onChange={(e) => {\r\n                            setselectedUser(e.currentTarget.textContent)\r\n                            setimg(e.currentTarget.firstChild.getAttribute('src'))\r\n                        }}\r\n                    />\r\n                </span>\r\n                <input\r\n                    className='form-input bg-dark text-white fs-400 ff-sans-cond'\r\n                    type='password'\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                        const test = /^[0-9\\b]+$/\r\n                        if (test.test(e.target.value) || e.target.value === '') {\r\n                            setpassword(e.target.value)\r\n                        } else {\r\n                            setisHidden(true)\r\n                        }\r\n                        setTimeout(() => setisHidden(false), 5000)\r\n                    }}\r\n                    placeholder=\"Password\" />\r\n                <div className={!isHidden ? 'hide' : ''}>\r\n                    <Label\r\n                        basic\r\n                        color='red'\r\n                        pointing\r\n                    >\r\n                        Please enter numbers only!\r\n                    </Label>\r\n                </div>\r\n            </div>\r\n            <div className=\"underline-indicators container\">\r\n                <button\r\n                    className='d-block fs-500 ff-serif bg-dark text-accent'\r\n                    onClick={(e) => {\r\n                        if (!selectedUser) {\r\n                            alert('Please Select Your User Name')\r\n                            return\r\n                        }\r\n                        for (let i = 0; i < users.length; i++) {\r\n                            const target = users[i]\r\n                            if (target.text === selectedUser) {\r\n                                handleSignin(e, target)\r\n                            }\r\n                        }\r\n                    }}>\r\n                    Sign In\r\n                </button>\r\n            </div>\r\n            <Link\r\n                to={'/signup'}\r\n                className='d-block fs-400 ff-serif bg-dark text-accent'\r\n            >\r\n                New User? Sign Up here.\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Button } from 'semantic-ui-react'\r\nimport { signOut } from '../actions/signin'\r\n\r\nconst Nav = () => {\r\n\r\n    const user = useSelector((store) => store.signIn.user)\r\n\r\n    const [isExpanded, setisExpanded] = useState(false)\r\n    const [isVisible, setisVisible] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const handleSignout = () => {\r\n        dispatch(signOut())\r\n        navigate('/signin')\r\n    }\r\n\r\n    const toggleNav = (e) => {\r\n        e.preventDefault()\r\n        if (!isVisible) {\r\n            setisVisible(true)\r\n            setisExpanded(true)\r\n        } else {\r\n            setisVisible(false)\r\n            setisExpanded(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='primary-header flex bg-dark'>\r\n            <p\r\n                className='fs-300 ff-serif text-white user-name'\r\n            >Welcome <span\r\n                className='ff-serif fs-400 text-accent'\r\n            >{user && user.text}\r\n                </span>\r\n                !</p>\r\n            <button\r\n                onClick={(e) => toggleNav(e)}\r\n                aria-expanded={isExpanded}\r\n                className='mobile-nav-toggle'\r\n            ><span\r\n                className='sr-only'\r\n            >Menu</span></button>\r\n            <div\r\n                data-visible={isVisible}\r\n                className='nav primary-navigation underline-indicators flex'\r\n            >\r\n                <Link\r\n                    to='/'\r\n                    exact='true'\r\n                    className='fs-400 ff-sans-cond text-white'\r\n                >\r\n                    Home\r\n                </Link>\r\n                <Link\r\n                    to='/new'\r\n                    className='fs-400 ff-sans-cond text-white'\r\n                >\r\n                    New Poll\r\n                </Link>\r\n                <Link\r\n                    to='/leaderboard'\r\n                    className='fs-400 ff-sans-cond text-white'\r\n                >\r\n                    Leaderboard\r\n                </Link>\r\n                <Link\r\n                    to='/signin'\r\n                    onClick={() => handleSignout()}\r\n                    className='fs-400 ff-sans-cond text-white'\r\n                >\r\n                    Sign Out\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Nav\r\n","import { _getQuestions, _saveQuestion, _saveQuestionAnswer } from \"../_DATA\"\r\n\r\nexport const GET_QUESTIONS = 'GET_QUESTIONS'\r\nexport const ADD_QUESTION = 'ADD_QUESTION'\r\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\r\n\r\nconst getQuestions = (questions) => {\r\n    return {\r\n        type: GET_QUESTIONS,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport const handleGetQuestions = () => {\r\n    return (dispatch) => {\r\n        return _getQuestions()\r\n            .then((questions) => dispatch(getQuestions(questions)))\r\n    }\r\n}\r\n\r\nconst addQuestion = (question) => {\r\n    return {\r\n        type: ADD_QUESTION,\r\n        question,\r\n    }\r\n}\r\n\r\nexport const handleAddQuestion = (data) => {\r\n    return (dispatch) => {\r\n        return _saveQuestion(data)\r\n        .then(question => dispatch(addQuestion(question)))\r\n    }\r\n}\r\n\r\nconst answerQuestion = (question) => {\r\n    return {\r\n        type: ANSWER_QUESTION,\r\n        authedUser: question.authedUser,\r\n        qid: question.qid,\r\n        answer: question.answer,\r\n    }\r\n}\r\n\r\nexport const handleAnswerQuestion = (question) => {\r\n    return (dispatch) => {\r\n        return _saveQuestionAnswer(question)\r\n        .then(() => dispatch(answerQuestion(question)))\r\n    }\r\n}","import React, { Component, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Form, Icon, Image, Message, Progress } from 'semantic-ui-react'\r\nimport { handleAnswerQuestion } from '../actions/questions'\r\n\r\nconst Poll = ({ viewed, poll }) => {\r\n\r\n    const { id, author, optionOne, optionTwo } = poll\r\n\r\n    const users = useSelector(store => store.users)\r\n    const authedUser = useSelector(store => store.signIn.user)\r\n\r\n    const [answered, setanswered] = useState(false)\r\n    const [answer, setanswer] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (optionOne.votes.includes(authedUser.key)\r\n            || optionTwo.votes.includes(authedUser.key)) {\r\n            setanswered(true)\r\n        } else {\r\n            setanswered(false)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const user = users[author]\r\n\r\n    const optionOneVotes = optionOne.votes.length\r\n    const optionTwoVotes = optionTwo.votes.length\r\n    const total = optionOneVotes + optionTwoVotes\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (answer === '') {\r\n            alert('Please choose an answer!')\r\n            return\r\n        }\r\n        const question = {\r\n            authedUser: authedUser.key,\r\n            qid: id,\r\n            answer,\r\n        }\r\n        dispatch(handleAnswerQuestion(question))\r\n        .then(() => {\r\n            setanswered(true)\r\n        })\r\n    }\r\n\r\n    const handleBack = (e) => {\r\n        e.preventDefault()\r\n        navigate(-1)\r\n    }\r\n\r\n    return (\r\n        <div className='flex text-white card ff-serif'>\r\n            <div className='card-header flex'>\r\n                <p className='fs-400'>{user.text} asked:</p>\r\n                {viewed && (\r\n                    <Button\r\n                        icon floated='right'\r\n                        size='mini'\r\n                        compact\r\n                        circular\r\n                        onClick={(e) => handleBack(e)}\r\n                    >\r\n                        <Icon name='left arrow' />\r\n                    </Button>\r\n                )}\r\n            </div>\r\n            <div className='card-content flex'>\r\n                <div className='card-img'><Image src={user.image.src} alt='user avatar' size='massive' avatar wrapped /></div>\r\n                <div className=\"card-info\">\r\n                    {!viewed && (\r\n                        <div>\r\n                            <p className='uppercase text-accent'>Would You Rather?</p>\r\n                            <p className='fs-400 ff-sans-cond'>{poll.optionOne.text} or ...</p>\r\n                            <Link\r\n                                className='button d-block fs-500 ff-serif bg-trans text-accent'\r\n                                to={`/poll/${poll.id}`}>View</Link>\r\n                        </div>\r\n                    )}\r\n                    {viewed && answered && (\r\n                        <div className='flex col'>\r\n                            <p>Would You Rather?</p>\r\n                            <div className={poll.optionOne.votes.includes(authedUser.key)\r\n                                ? 'selected-answer flex col card-answer'\r\n                                : 'not-selected-answer flex col card-answer'\r\n                            }>\r\n                                <p>{poll.optionOne.text}</p>\r\n                                <div className='prog'>\r\n                                    <Progress\r\n                                        inverted\r\n                                        percent={Math.round(optionOneVotes / total * 100)}\r\n                                        progress\r\n                                        indicating\r\n                                    />\r\n                                </div>\r\n                                <p>{optionOneVotes} out of {total} votes</p>\r\n                            </div>\r\n                            <div className={poll.optionTwo.votes.includes(authedUser.key)\r\n                                ? 'selected-answer flex col card-answer'\r\n                                : 'not-selected-answer flex col card-answer'\r\n                            }>\r\n                                <p>{poll.optionTwo.text}</p>\r\n                                <div className='prog'>\r\n                                    <Progress\r\n                                        inverted\r\n                                        percent={Math.round(optionTwoVotes / total * 100)}\r\n                                        progress\r\n                                        indicating\r\n                                    />\r\n                                </div>\r\n                                <p>{optionTwoVotes} out of {total} votes</p>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {viewed && answered === false && (\r\n                        <form\r\n                            onSubmit={(e) => handleSubmit(e)}\r\n                            className='flow form'\r\n                        >\r\n                            <p>Would You Rather?</p>\r\n                            <div className='flex'>\r\n                                <input\r\n                                    type='radio'\r\n                                    id='optionOne'\r\n                                    name='options'\r\n                                    value={poll.optionOne.text}\r\n                                    onChange={(e) => setanswer(e.target.id)} />\r\n                                <p className='ff-sans-cond fs-400'>{poll.optionOne.text}</p>\r\n                            </div>\r\n                            <div className='flex'>\r\n                                <input\r\n                                    type='radio'\r\n                                    id='optionTwo'\r\n                                    name='options'\r\n                                    value={poll.optionTwo.text}\r\n                                    onChange={(e) => setanswer(e.target.id)} />\r\n                                <p className='ff-sans-cond fs-400'>{poll.optionTwo.text}</p>\r\n                            </div>\r\n                            <button\r\n                                type='submit'\r\n                                className='bg-trans text-accent button'\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </form>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Poll\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router'\r\nimport { useNavigateToHome } from '../_DATA'\r\nimport Nav from './Nav'\r\nimport Poll from './Poll'\r\n\r\nconst Home = () => {\r\n\r\n    const questions = useSelector(store => store.questions)\r\n    const authedUser = useSelector(store => store.signIn)\r\n\r\n    const [answered, setanswered] = useState(false)\r\n    \r\n    const navigate = useNavigate()\r\n\r\n    let allAnswered = []\r\n    let allNotAnswered = []\r\n\r\n    Object.keys(questions).forEach(q => {\r\n        if (questions[q].optionTwo.votes.includes(authedUser.user.key)) {\r\n            allAnswered.push(questions[q])\r\n        } else if (questions[q].optionOne.votes.includes(authedUser.user.key)) {\r\n            allAnswered.push(questions[q])\r\n        } else {\r\n            allNotAnswered.push(questions[q])\r\n        }\r\n    })\r\n\r\n    allAnswered.sort((a,b) => {\r\n        return b.timestamp - a.timestamp\r\n    })\r\n    allNotAnswered.sort((a,b) => {\r\n        return b.timestamp - a.timestamp\r\n    })\r\n\r\n    useNavigateToHome(authedUser, navigate)\r\n\r\n    return (\r\n        <div className='fill bg-dark'>\r\n            <Nav />\r\n            <div className=\"home-menu flex bg-black underline-indicators\">\r\n                <button\r\n                    className={answered ? 'active bg-trans' : 'bg-trans text-accent'}\r\n                    onClick={() => setanswered(true)}\r\n                >Answered</button>\r\n                <button\r\n                    className={!answered ? 'active bg-trans' : 'bg-trans text-accent'}\r\n                    onClick={() => setanswered(false)}\r\n                >Not Answered</button>\r\n            </div>\r\n            <ul className='cards-container'>\r\n                {answered === true\r\n                    ? (allAnswered.map((poll) => (\r\n                        <li key={poll.id}>\r\n                            <Poll poll={poll} answered={true} />\r\n                        </li>\r\n                    )))\r\n                    : (allNotAnswered.map((poll) => (\r\n                        <li key={poll.id}>\r\n                            <Poll poll={poll} answered={false} />\r\n                        </li>\r\n                    )))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router'\r\nimport { handleAddQuestion } from '../actions/questions'\r\nimport { useNavigateToHome } from '../_DATA'\r\nimport Nav from './Nav'\r\n\r\nconst New = () => {\r\n\r\n    const [optionOneText, setoptionOne] = useState('')\r\n    const [optionTwoText, setoptionTwo] = useState('')\r\n    const authedUser = useSelector(store => store.signIn)\r\n    const navigate = useNavigate()\r\n\r\n    useNavigateToHome(authedUser, navigate)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const data = {\r\n            optionOneText,\r\n            optionTwoText,\r\n            author: authedUser.user.key\r\n        }\r\n        dispatch(handleAddQuestion(data))\r\n        navigate('/')\r\n    }\r\n    \r\n    return (\r\n        <div className='fill new'>\r\n            <Nav />\r\n            <div className=\"card text-white flex\">\r\n                <div className=\"card-header\">\r\n                    <p>Posting as {authedUser.user.text}</p>\r\n                </div>\r\n                <form\r\n                    className='flow form'\r\n                    onSubmit={(e) => handleSubmit(e)}\r\n                    >\r\n                    <div className='form flex'>\r\n                        <p className='text-accent'>Would You Rather?</p>\r\n                        <input\r\n                        className='form-input bg-dark text-white fs-400 ff-sans-cond'\r\n                        type='text'\r\n                        placeholder='Enter Option One'\r\n                        value={optionOneText}\r\n                        onChange={(e) => setoptionOne(e.target.value)}\r\n                        />\r\n                        <p>Or</p>\r\n                        <input\r\n                        className='form-input bg-dark text-white fs-400 ff-sans-cond'\r\n                        type='text'\r\n                        placeholder='Enter Option Two'\r\n                        value={optionTwoText}\r\n                        onChange={(e) => setoptionTwo(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                    className='button d-block fs-500 ff-serif bg-trans text-accent'\r\n                    type='submit'\r\n                    >Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default New\r\n","import React from 'react'\r\nimport { Image } from 'semantic-ui-react'\r\nimport { arraying } from '../_DATA'\r\n\r\nconst User = ({ user }) => {\r\n\r\n    const answers = arraying(user.answers).length\r\n    const questions = user.questions.length\r\n    const total = answers + questions\r\n\r\n    return (\r\n        <div className='card text-white ff-serif flex'>\r\n            <div className='card-header'>\r\n                <p className='fs-400'>User Name: <span className='text-accent'>{user.text}</span></p>\r\n            </div>\r\n            <div className=\"card-content flex\">\r\n                <div className='card-img'>\r\n                    <Image src={user.image.src} size='massive' avatar wrapped  />\r\n                </div>\r\n                <div className='card-info'>\r\n                    <div className=\"flex\">\r\n                        <p className='fs-400'>Answered Questions </p><span className=\"text-accent\">{answers}</span>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <p className='fs-400'>Created Questions </p><span className=\"text-accent\">{questions}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='card-fotter'>\r\n                <p>Total Score <span className=\"text-accent\">{total}</span></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router'\r\nimport { arraying, useNavigateToHome } from '../_DATA'\r\nimport Nav from './Nav'\r\nimport User from './User'\r\n\r\nconst Leaderboard = () => {\r\n\r\n    const users = useSelector(store => store.users)\r\n    const usersArray = arraying(users)\r\n\r\n    const scoresArray = usersArray.map(user => {\r\n        const answers = arraying(user.answers).length\r\n        const questions = user.questions.length\r\n        const total = answers + questions\r\n        return {\r\n            ...user,\r\n            score: total,\r\n        }\r\n    }).sort((a,b) => b.score - a.score)\r\n\r\n    const authedUser = useSelector(store => store.signIn)\r\n    const navigate = useNavigate()\r\n\r\n    useNavigateToHome(authedUser, navigate)\r\n\r\n    return (\r\n        <div className='fill'>\r\n            <Nav />\r\n            <ul className='cards-container'>\r\n                {scoresArray.map(user => (\r\n                    <li key={user.key}>\r\n                        <User user={user} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Leaderboard\r\n","import { _addUser, _getUsers } from \"../_DATA\"\r\n\r\nexport const GET_USERS = 'GET_USERS'\r\nexport const ADD_USER = 'ADD_USER'\r\n\r\nconst users = (users) => {\r\n    return {\r\n        type: GET_USERS,\r\n        users,\r\n    }\r\n}\r\n\r\nexport const handleGetUsers = () => {\r\n    return (dispatch) => {\r\n        return _getUsers()\r\n        .then((allUsers => dispatch(users(allUsers))))\r\n    }\r\n}\r\n\r\nconst addUser = (user) => {\r\n    return {\r\n        type: ADD_USER,\r\n        user,\r\n    }\r\n}\r\n\r\nexport const handleAddUser = (user) => {\r\n    return (dispatch) => {\r\n        return _addUser(user)\r\n        .then(user => dispatch(addUser(user)))\r\n    }\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams, useNavigate } from 'react-router'\r\nimport { Button, Icon, Message } from 'semantic-ui-react'\r\nimport { useNavigateToHome } from '../_DATA'\r\nimport Nav from './Nav'\r\nimport Poll from './Poll'\r\n\r\nconst PollView = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const authedUser = useSelector(store => store.signIn)\r\n\r\n    useNavigateToHome(authedUser, navigate)\r\n\r\n    const { id } = useParams()\r\n\r\n    const questions = useSelector(store => store.questions)\r\n    const poll = questions[id]\r\n\r\n    const handleBack = (e) => {\r\n        e.preventDefault()\r\n        navigate(-1)\r\n    }\r\n\r\n    if (!poll) {\r\n        return (\r\n            <div className='container fill'>\r\n                <Nav />\r\n                <Message negative size='massive'>\r\n                    <Message.Header>We're sorry we couldn't find this poll</Message.Header>\r\n                    <p>Error 404 NOT FOUND</p>\r\n                    <Button\r\n                        labelPosition='right'\r\n                        label='Go back'\r\n                        icon floated='left'\r\n                        \r\n                        compact\r\n                        circular\r\n                        onClick={(e) => handleBack(e)}\r\n                    >\r\n                        <Icon name='left arrow' />\r\n                    </Button>\r\n                </Message>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='container fill'>\r\n            <Nav />\r\n            <div className='poll-view'>\r\n                <Poll poll={poll} viewed={true} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PollView\r\n","export default __webpack_public_path__ + \"static/media/profile.9f4aa540.png\";","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Image, Label } from 'semantic-ui-react'\r\nimport { handleAddUser } from '../actions/users'\r\nimport profile from '../assets/profile.png'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst SignUp = () => {\r\n    const [url, seturl] = useState(null)\r\n    const [username, setusername] = useState('')\r\n    const [password, setpassword] = useState('')\r\n    const [isHidden, setisHidden] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!url) {\r\n            alert('Please choose a profile picture!')\r\n            return\r\n        } else if (username === '') {\r\n            alert('Please add a user name!')\r\n            return\r\n        } else if (password === '' || password.length < 4) {\r\n            alert('Password should be 4 characters long!')\r\n            return\r\n        }\r\n        const user = {\r\n            url,\r\n            username,\r\n            password,\r\n        }\r\n        dispatch(handleAddUser(user))\r\n            .then(() => {\r\n                setTimeout(() => {\r\n                    navigate('/signin')\r\n                }, 300);\r\n            })\r\n    }\r\n    return (\r\n        <div className='flex col text-white'>\r\n            <Button\r\n                label='Back to Login'\r\n                color='facebook'\r\n                icon='left arrow'\r\n                size='small'\r\n                onClick={() => navigate('/signin')}\r\n            />\r\n            <form\r\n                className='form flex'\r\n                onSubmit={(e) => handleSubmit(e)}\r\n            >\r\n                <Image\r\n                    src={url ? url : profile}\r\n                    avatar\r\n                    size='small'\r\n                />\r\n                <input\r\n                    type='file'\r\n                    onChange={(e) => seturl(window.URL.createObjectURL(e.target.files[0]))}\r\n                >\r\n\r\n                </input>\r\n                <label\r\n                    htmlFor='user-name'>User Name</label>\r\n                <input\r\n                    className='form-input bg-dark text-white fs-400 ff-sans-cond'\r\n                    id='user-name'\r\n                    name='user-name'\r\n                    value={username}\r\n                    type='text'\r\n                    placeholder='User Name'\r\n                    onChange={(e) => setusername(e.target.value)}\r\n                />\r\n                <label\r\n                    htmlFor='password'>Password</label>\r\n                <input\r\n                    className='form-input bg-dark text-white fs-400 ff-sans-cond'\r\n                    id='password'\r\n                    name='password'\r\n                    value={password}\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    onChange={(e) => {\r\n                        const test = /^[0-9\\b]+$/\r\n                        if (test.test(e.target.value) || e.target.value === '') {\r\n                            setpassword(e.target.value)\r\n                        } else {\r\n                            setisHidden(true)\r\n                        }\r\n                        setTimeout(() => setisHidden(false), 5000)\r\n                    }}\r\n                />\r\n                <PasswordChecklist\r\n                    className='text-accent fs-200 ff-sans-cond'\r\n                    rules={['minLength']}\r\n                    value={password}\r\n                    minLength={4}\r\n                    iconSize={10}\r\n                    messages={{\r\n                        minLength: 'Password should be 4 characters long!'\r\n                    }}\r\n                />\r\n                <div className={!isHidden ? 'hide' : ''}>\r\n                    <Label\r\n                        basic\r\n                        color='red'\r\n                        pointing\r\n                    >\r\n                        Please enter numbers only!\r\n                    </Label>\r\n                </div>\r\n                <button\r\n                    type='submit'\r\n                    className='button bg-trans text-accent'>\r\n                    Sign Up\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import '../App.css';\nimport Signin from './Signin';\nimport Home from './Home';\nimport New from './New';\nimport Leaderboard from './Leaderboard';\nimport { Fragment, useEffect, useState } from 'react';\nimport { handleGetUsers } from '../actions/users';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handleGetQuestions } from '../actions/questions';\nimport { Loader } from 'semantic-ui-react';\nimport { useNavigate, Route, Routes } from 'react-router';\nimport PollView from './PollView';\nimport SignUp from './SignUp';\n\nconst App = () => {\n\n  const [loading, setloading] = useState(true)\n\n  const authedUser = useSelector(store => store.signIn)\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    dispatch(handleGetUsers())\n      .then(() => dispatch(handleGetQuestions()))\n      .then(() => setloading(false))\n    if (!authedUser) {\n      navigate('/signin')\n    }\n  }, [dispatch])\n\n  return (\n    <Fragment>\n      <div>\n        {loading === true\n          ? (\n            <div className='grid'>\n              <div>\n                <Loader active size='massive' />\n              </div>\n              <span className='fs-500 ff-serif text-dark loading'>Loading Data...</span>\n            </div>\n          )\n          : (\n            <Routes>\n              <Route path='/' element={<Home />} />\n              <Route path='/signin' element={<Signin />} />\n              <Route path='/signup' element={<SignUp />} />\n              <Route path='/new' element={<New />} />\n              <Route path='/leaderboard' element={<Leaderboard />} />\n              <Route path='/poll/:id' element={<PollView />} />\n            </Routes>\n          )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux'\r\nimport { signIn } from './signin'\r\nimport { users } from './users'\r\nimport { questions } from './questions'\r\n\r\nexport default combineReducers({\r\n    signIn,\r\n    users,\r\n    questions,\r\n})","import { SIGN_IN, SIGN_OUT } from \"../actions/signin\";\r\n\r\nexport const signIn = (state = {\r\n    user: {},\r\n    logged: false,\r\n}, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return {\r\n                user: action.user,\r\n                logged: action.logged,\r\n            }\r\n        case SIGN_OUT:\r\n            return {\r\n                user: action.user,\r\n                logged: action.logged,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ADD_QUESTION, ANSWER_QUESTION } from \"../actions/questions\";\r\nimport { ADD_USER, GET_USERS } from \"../actions/users\";\r\n\r\nexport const users = (state = [], action) => {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return action.users\r\n        case ADD_QUESTION:\r\n            return {\r\n                ...state,\r\n                [action.question.author]: {\r\n                    ...state[action.question.author],\r\n                    questions: state[action.question.author].questions.concat([action.authedUser])\r\n                }\r\n            }\r\n        case ANSWER_QUESTION:\r\n            return {\r\n                ...state,\r\n                [action.authedUser]: {\r\n                    ...state[action.authedUser],\r\n                    answers: {\r\n                        ...state[action.authedUser].answers,\r\n                        [action.qid]: action.answer\r\n                    }\r\n                }\r\n            }\r\n        case ADD_USER:\r\n            return {\r\n                ...state,\r\n                [action.user.key]: action.user,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ADD_QUESTION, ANSWER_QUESTION, GET_QUESTIONS } from \"../actions/questions\";\r\n\r\nexport const questions = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_QUESTIONS:     \r\n            return action.questions\r\n        case ADD_QUESTION:     \r\n            return {\r\n                ...state,\r\n                [action.question.id]: action.question,\r\n            }\r\n        case ANSWER_QUESTION:     \r\n            return {\r\n                ...state,\r\n                [action.qid]: {\r\n                    ...state[action.qid],\r\n                    [action.answer]: {\r\n                        ...state[action.qid][action.answer],\r\n                        votes: state[action.qid][action.answer].votes.concat([action.authedUser])\r\n                    }\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type)\r\n    console.log('The Action: ', action);\r\n    const returnValue = next(action)\r\n    console.log('The New State: ', store.getState());\r\n    console.groupEnd()\r\n    return returnValue\r\n}\r\n\r\nexport default logger","import thunk from \"redux-thunk\";\r\nimport logger from \"./logger\";\r\nimport { applyMiddleware } from 'redux'\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger,\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\nimport middleware from './middleware'\nimport { HashRouter } from 'react-router-dom';\n\nconst store = createStore(reducers, middleware)\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}